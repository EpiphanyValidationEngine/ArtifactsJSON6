{"data": {"CAPA": {"tactics": [{"id": "TA0005", "name": "Defense Evasion", "link": "https://attack.mitre.org/tactics/TA0005/", "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics\u2019 techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ", "techniques": [{"id": "T1140", "name": "Deobfuscate/Decode Files or Information", "link": "https://attack.mitre.org/techniques/T1140/", "description": "Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\nOne such example is the use of certutil to decode a remote access tool portable executable file that has been hidden inside a certificate file. Another example is using the Windows copy /b or type command to reassemble binary fragments into a malicious payload.\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.", "signatures": [{"severity": "INFO", "description": "decode data using Base64 in .NET"}]}]}, {"id": "TA0007", "name": "Discovery", "link": "https://attack.mitre.org/tactics/TA0007/", "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what\u2019s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ", "techniques": [{"id": "T1083", "name": "File and Directory Discovery", "link": "https://attack.mitre.org/techniques/T1083/", "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).\nSome files and directories may require elevated or specific user permissions to access.", "signatures": [{"severity": "INFO", "description": "get file size"}, {"severity": "INFO", "description": "check if file exists"}, {"severity": "INFO", "description": "get common file path"}]}]}, {"id": "TA0009", "name": "Collection", "link": "https://attack.mitre.org/tactics/TA0009/", "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to either steal (exfiltrate) the data or to use the data to gain more information about the target environment. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.", "techniques": [{"id": "T1560", "name": "Archive Collected Data", "link": "https://attack.mitre.org/techniques/T1560/", "description": "An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method."}, {"id": "T1560.002", "name": "Archive via Library", "link": "https://attack.mitre.org/techniques/T1560/002/", "description": "An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including Python rarfile , libzip , and zlib . Most libraries include functionality to encrypt and/or compress data.\nSome archival libraries are preinstalled on systems, such as bzip2 on macOS and Linux, and zip on Windows. Note that the libraries are different from the utilities. The libraries can be linked against when compiling, while the utilities require spawning a subshell, or a similar execution mechanism.", "signatures": [{"severity": "INFO", "description": "compress data using GZip in .NET"}]}]}]}, "CAPE Sandbox": {"tactics": [{"id": "TA0006", "name": "Credential Access", "link": "https://attack.mitre.org/tactics/TA0006/", "description": "The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.", "techniques": [{"id": "T1003", "name": "OS Credential Dumping", "link": "https://attack.mitre.org/techniques/T1003/", "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures. Credentials can then be used to perform Lateral Movement and access restricted information.\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software."}]}, {"id": "T1539", "name": "Steal Web Session Cookie", "link": "https://attack.mitre.org/techniques/T1539/", "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.\nThere are several examples of malware targeting cookies from web browsers on the local system. Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on User Execution by tricking victims into running malicious JavaScript in their browser.\nThere are also open source frameworks such as Evilginx2 and Muraena that can gather session cookies through a malicious proxy (e.g., Adversary-in-the-Middle) that can be set up by an adversary and used in phishing campaigns.\nAfter an adversary acquires a valid cookie, they can then perform a Web Session Cookie technique to login to the corresponding web application.", "signatures": [{"severity": "UNKNOWN", "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials."}]}, {"id": "T1555", "name": "Credentials from Password Stores", "link": "https://attack.mitre.org/techniques/T1555/", "description": "Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications and services that store passwords to make them easier for users to manage and maintain, such as password managers and cloud secrets vaults. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may search for common password storage locations to obtain user credentials."}]}, {"id": "T1552", "name": "Unsecured Credentials", "link": "https://attack.mitre.org/techniques/T1552/", "description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry),  or other specialized files/artifacts (e.g. Private Keys).", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials."}]}, {"id": "T1555.003", "name": "Credentials from Web Browsers", "link": "https://attack.mitre.org/techniques/T1555/003/", "description": "Adversaries may acquire credentials from web browsers by reading files specific to the target browser. Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.\nFor example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data and executing a SQL query: SELECT action_url, username_value, password_value FROM logins;. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function CryptUnprotectData, which uses the victim\u2019s cached logon credentials as the decryption key.\nAdversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc. Windows stores Internet Explorer and Microsoft Edge credentials in Credential Lockers managed by the Windows Credential Manager.\nAdversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.\nAfter acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may acquire credentials from web browsers by reading files specific to the target browser."}]}, {"id": "T1552.001", "name": "Credentials In Files", "link": "https://attack.mitre.org/techniques/T1552/001/", "description": "Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.\nIt is possible to extract passwords from backups or saved virtual machines through OS Credential Dumping. Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller.\nIn cloud and/or containerized environments, authenticated user and service account credentials are often stored in local configuration and credential files. They may also be found as parameters to deployment commands in container logs. In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials."}]}]}, {"id": "TA0005", "name": "Defense Evasion", "link": "https://attack.mitre.org/tactics/TA0005/", "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics\u2019 techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ", "techniques": [{"id": "T1014", "name": "Rootkit", "link": "https://attack.mitre.org/techniques/T1014/", "description": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information.  \nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or System Firmware.  Rootkits have been seen for Windows, Linux, and Mac OS X systems.  ", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components."}]}, {"id": "T1542", "name": "Pre-OS Boot", "link": "https://attack.mitre.org/techniques/T1542/", "description": "Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control.\nAdversaries may overwrite data in boot drivers or firmware such as BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) to persist on systems at a layer below the operating system. This can be particularly difficult to detect as malware at this level will not be detected by host software-based defenses.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system."}]}, {"id": "T1542.003", "name": "Bootkit", "link": "https://attack.mitre.org/techniques/T1542/003/", "description": "Adversaries may use bootkits to persist on systems. A bootkit is a malware variant that modifies the boot sectors of a hard drive, allowing malicious code to execute before a computer's operating system has loaded. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\nIn BIOS systems, a bootkit may modify the Master Boot Record (MBR) and/or Volume Boot Record (VBR). The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code.\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.\nIn UEFI (Unified Extensible Firmware Interface) systems, a bootkit may instead create or modify files in the EFI system partition (ESP). The ESP is a partition on data storage used by devices containing UEFI that allows the system to boot the OS and other utilities used by the system. An adversary can use the newly created or patched files in the ESP to run malicious kernel code.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may use bootkits to persist on systems."}]}, {"id": "T1564", "name": "Hide Artifacts", "link": "https://attack.mitre.org/techniques/T1564/", "description": "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection."}]}, {"id": "T1036", "name": "Masquerading", "link": "https://attack.mitre.org/techniques/T1036/", "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\nRenaming abusable system utilities to evade security monitoring is also a form of Masquerading.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools."}]}, {"id": "T1055", "name": "Process Injection", "link": "https://attack.mitre.org/techniques/T1055/", "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges."}]}, {"id": "T1112", "name": "Modify Registry", "link": "https://attack.mitre.org/techniques/T1112/", "description": "Adversaries may interact with the Windows Registry as part of a variety of other techniques to aid in defense evasion, persistence, and execution.\nAccess to specific areas of the Registry depends on account permissions, with some keys requiring administrator-level access. The built-in Windows command-line utility Reg may be used for local or remote Registry modification. Other tools, such as remote access tools, may also contain functionality to interact with the Registry through the Windows API.\nThe Registry may be modified in order to hide configuration information or malicious payloads via Obfuscated Files or Information. The Registry may also be modified to Impair Defenses, such as by enabling macros for all Microsoft Office products, allowing privilege escalation without alerting the user, increasing the maximum number of allowed outbound requests, and/or modifying systems to store plaintext credentials in memory.\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. Often Valid Accounts are required, along with access to the remote system's SMB/Windows Admin Shares for RPC communication.\nFinally, Registry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via Reg or other utilities using the Win32 API. Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution."}]}, {"id": "T1548", "name": "Abuse Elevation Control Mechanism", "link": "https://attack.mitre.org/techniques/T1548/", "description": "Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions."}]}, {"id": "T1564.001", "name": "Hidden Files and Directories", "link": "https://attack.mitre.org/techniques/T1564/001/", "description": "Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a \u2018hidden\u2019 file. These files don\u2019t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (dir /a for Windows and ls \u2013a for Linux and macOS).\nOn Linux and Mac, users can mark specific files as hidden simply by putting a \u201c.\u201d as the first character in the file or folder name   . Files and folders that start with a period, \u2018.\u2019, are by default hidden from being viewed in the Finder application and standard command-line utilities like \u201cls\u201d. Users must specifically change settings to have these files viewable.\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app . On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn\u2019t clutter up the user\u2019s workspace. For example, SSH utilities create a .ssh folder that\u2019s hidden and contains the user\u2019s known hosts and keys.\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may set files and directories to be hidden to evade detection mechanisms."}]}]}, {"id": "TA0003", "name": "Persistence", "link": "https://attack.mitre.org/tactics/TA0003/", "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ", "techniques": [{"id": "T1542", "name": "Pre-OS Boot", "link": "https://attack.mitre.org/techniques/T1542/", "description": "Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control.\nAdversaries may overwrite data in boot drivers or firmware such as BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) to persist on systems at a layer below the operating system. This can be particularly difficult to detect as malware at this level will not be detected by host software-based defenses.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system."}]}, {"id": "T1542.003", "name": "Bootkit", "link": "https://attack.mitre.org/techniques/T1542/003/", "description": "Adversaries may use bootkits to persist on systems. A bootkit is a malware variant that modifies the boot sectors of a hard drive, allowing malicious code to execute before a computer's operating system has loaded. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\nIn BIOS systems, a bootkit may modify the Master Boot Record (MBR) and/or Volume Boot Record (VBR). The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code.\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.\nIn UEFI (Unified Extensible Firmware Interface) systems, a bootkit may instead create or modify files in the EFI system partition (ESP). The ESP is a partition on data storage used by devices containing UEFI that allows the system to boot the OS and other utilities used by the system. An adversary can use the newly created or patched files in the ESP to run malicious kernel code.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may use bootkits to persist on systems."}]}, {"id": "T1112", "name": "Modify Registry", "link": "https://attack.mitre.org/techniques/T1112/", "description": "Adversaries may interact with the Windows Registry as part of a variety of other techniques to aid in defense evasion, persistence, and execution.\nAccess to specific areas of the Registry depends on account permissions, with some keys requiring administrator-level access. The built-in Windows command-line utility Reg may be used for local or remote Registry modification. Other tools, such as remote access tools, may also contain functionality to interact with the Registry through the Windows API.\nThe Registry may be modified in order to hide configuration information or malicious payloads via Obfuscated Files or Information. The Registry may also be modified to Impair Defenses, such as by enabling macros for all Microsoft Office products, allowing privilege escalation without alerting the user, increasing the maximum number of allowed outbound requests, and/or modifying systems to store plaintext credentials in memory.\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. Often Valid Accounts are required, along with access to the remote system's SMB/Windows Admin Shares for RPC communication.\nFinally, Registry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via Reg or other utilities using the Win32 API. Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution."}]}, {"id": "T1547", "name": "Boot or Logon Autostart Execution", "link": "https://attack.mitre.org/techniques/T1547/", "description": "Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon. These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems."}]}, {"id": "T1547.001", "name": "Registry Run Keys / Startup Folder", "link": "https://attack.mitre.org/techniques/T1547/001/", "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level.\nThe following run keys are created by default on Windows systems:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n\nRun keys may exist under multiple hives. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" \nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\nThe following Registry keys can be used to set startup folder items for persistence:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n\nThe following Registry keys can control automatic startup of services during boot:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run automatically for the currently logged-on user.\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key."}]}]}, {"id": "TA0004", "name": "Privilege Escalation", "link": "https://attack.mitre.org/tactics/TA0004/", "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ", "techniques": [{"id": "T1055", "name": "Process Injection", "link": "https://attack.mitre.org/techniques/T1055/", "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges."}]}, {"id": "T1548", "name": "Abuse Elevation Control Mechanism", "link": "https://attack.mitre.org/techniques/T1548/", "description": "Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions."}]}, {"id": "T1547", "name": "Boot or Logon Autostart Execution", "link": "https://attack.mitre.org/techniques/T1547/", "description": "Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon. These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems."}]}, {"id": "T1547.001", "name": "Registry Run Keys / Startup Folder", "link": "https://attack.mitre.org/techniques/T1547/001/", "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level.\nThe following run keys are created by default on Windows systems:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n\nRun keys may exist under multiple hives. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" \nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\nThe following Registry keys can be used to set startup folder items for persistence:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n\nThe following Registry keys can control automatic startup of services during boot:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run automatically for the currently logged-on user.\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key."}]}]}, {"id": "TA0007", "name": "Discovery", "link": "https://attack.mitre.org/tactics/TA0007/", "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what\u2019s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ", "techniques": [{"id": "T1082", "name": "System Information Discovery", "link": "https://attack.mitre.org/techniques/T1082/", "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). On ESXi servers, threat actors may gather system information from various esxcli utilities, such as system hostname get, system version get, and storage filesystem list (to list storage volumes).\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.\nSystem Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment. ", "signatures": [{"severity": "UNKNOWN", "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture."}]}]}, {"id": "TA0011", "name": "Command and Control", "link": "https://attack.mitre.org/tactics/TA0011/", "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim\u2019s network structure and defenses.", "techniques": [{"id": "T1071", "name": "Application Layer Protocol", "link": "https://attack.mitre.org/techniques/T1071/", "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, DNS, or publishing/subscribing. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic."}]}, {"id": "T1573", "name": "Encrypted Channel", "link": "https://attack.mitre.org/techniques/T1573/", "description": "Adversaries may employ an encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol."}]}]}, {"id": "TA0002", "name": "Execution", "link": "https://attack.mitre.org/tactics/TA0002/", "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ", "techniques": [{"id": "T1106", "name": "Native API", "link": "https://attack.mitre.org/techniques/T1106/", "description": "Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes. These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\nAdversaries may abuse these OS API functions as a means of executing behaviors. Similar to Command and Scripting Interpreter, the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system.\nNative API functions (such as NtCreateProcess) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries. For example, functions such as the Windows API CreateProcess() or GNU fork() will allow programs and scripts to start other processes. This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.\nAdversaries may use assembly to directly or in-directly invoke syscalls in an attempt to subvert defensive sensors and detection signatures such as user mode API-hooks. Adversaries may also attempt to tamper with sensors and defensive tools associated with API monitoring, such as unhooking monitored functions via Disable or Modify Tools.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may interact with the native OS application programming interface (API) to execute behaviors."}]}]}, {"id": "TA0009", "name": "Collection", "link": "https://attack.mitre.org/tactics/TA0009/", "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to either steal (exfiltrate) the data or to use the data to gain more information about the target environment. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.", "techniques": [{"id": "T1005", "name": "Data from Local System", "link": "https://attack.mitre.org/techniques/T1005/", "description": "Adversaries may search local system sources, such as file systems, configuration files, local databases, or virtual machine files, to find files of interest and sensitive data prior to Exfiltration.\nAdversaries may do this using a Command and Scripting Interpreter, such as cmd as well as a Network Device CLI, which have functionality to interact with the file system to gather information. Adversaries may also use Automated Collection on the local system.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration."}]}]}, {"id": "TA0040", "name": "Impact", "link": "https://attack.mitre.org/tactics/TA0040/", "description": "The adversary is trying to manipulate, interrupt, or destroy your systems and data.\n \nImpact consists of techniques that adversaries use to disrupt availability or compromise integrity by manipulating business and operational processes. Techniques used for impact can include destroying or tampering with data. In some cases, business processes can look fine, but may have been altered to benefit the adversaries\u2019 goals. These techniques might be used by adversaries to follow through on their end goal or to provide cover for a confidentiality breach.", "techniques": [{"id": "T1496", "name": "Resource Hijacking", "link": "https://attack.mitre.org/techniques/T1496/", "description": "Adversaries may leverage the resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability. \nResource hijacking may take a number of different forms. For example, adversaries may:\n\nLeverage compute resources in order to mine cryptocurrency\nSell network bandwidth to proxy networks\nGenerate SMS traffic for profit\nAbuse cloud-based messaging services to send large quantities of spam messages\n\nIn some cases, adversaries may leverage multiple types of Resource Hijacking at once.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may leverage the resources of co-opted systems in order to solve resource intensive problems, which may impact system and/or hosted service availability."}]}]}]}, "Yomi Hunter": {"tactics": [{"id": "TA0003", "name": "Persistence", "link": "https://attack.mitre.org/tactics/TA0003/", "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ", "techniques": [{"id": "T1198", "name": "SIP and Trust Provider Hijacking", "link": "https://attack.mitre.org/techniques/T1198/", "description": "In user mode, Windows Authenticode  digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,   which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature. \nBecause of the varying executable file types and corresponding signature formats, Microsoft created software components called Subject Interface Packages (SIPs)  to provide a layer of abstraction between API functions and files. SIPs are responsible for enabling API functions to create, retrieve, calculate, and verify signatures. Unique SIPs exist for most file formats (Executable, PowerShell, Installer, etc., with catalog signing providing a catch-all  ) and are identified by globally unique identifiers (GUIDs). \nSimilar to Code Signing, adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system. Adversaries may hijack SIP and trust provider components to mislead operating system and whitelisting tools to classify malicious (or any) code as signed by: \n\nModifying the Dll and FuncName Registry values in HKLM\\SOFTWARE[\\WOW6432Node]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllGetSignedDataMsg{SIP_GUID} that point to the dynamic link library (DLL) providing a SIP\u2019s CryptSIPDllGetSignedDataMsg function, which retrieves an encoded digital certificate from a signed file. By pointing to a maliciously-crafted DLL with an exported function that always returns a known good signature value (ex: a Microsoft signature for Portable Executables) rather than the file\u2019s real signature, an adversary can apply an acceptable signature value to all files using that SIP  (although a hash mismatch will likely occur, invalidating the signature, since the hash returned by the function will not match the value computed from the file).\nModifying the Dll and FuncName Registry values in HKLM\\SOFTWARE[WOW6432Node]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllVerifyIndirectData{SIP_GUID} that point to the DLL providing a SIP\u2019s CryptSIPDllVerifyIndirectData function, which validates a file\u2019s computed hash against the signed hash value. By pointing to a maliciously-crafted DLL with an exported function that always returns TRUE (indicating that the validation was successful), an adversary can successfully validate any file (with a legitimate signature) using that SIP  (with or without hijacking the previously mentioned CryptSIPDllGetSignedDataMsg function). This Registry value could also be redirected to a suitable exported function from an already present DLL, avoiding the requirement to drop and execute a new file on disk.\nModifying the DLL and Function Registry values in HKLM\\SOFTWARE[WOW6432Node]Microsoft\\Cryptography\\Providers\\Trust\\FinalPolicy{trust provider GUID} that point to the DLL providing a trust provider\u2019s FinalPolicy function, which is where the decoded and parsed signature is checked and the majority of trust decisions are made. Similar to hijacking SIP\u2019s CryptSIPDllVerifyIndirectData function, this value can be redirected to a suitable exported function from an already present DLL or a maliciously-crafted DLL (though the implementation of a trust provider is complex).\nNote: The above hijacks are also possible without modifying the Registry via DLL Search Order Hijacking.\n\nHijacking SIP or trust provider components can also enable persistent code execution, since these malicious components may be invoked by any application that performs code signing or signature validation. ", "signatures": [{"severity": "UNKNOWN", "description": "The binary has an Authenticode signature"}, {"severity": "UNKNOWN", "description": "The file have a Trusted Certificate"}]}]}, {"id": "TA0005", "name": "Defense Evasion", "link": "https://attack.mitre.org/tactics/TA0005/", "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics\u2019 techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ", "techniques": [{"id": "T1198", "name": "SIP and Trust Provider Hijacking", "link": "https://attack.mitre.org/techniques/T1198/", "description": "In user mode, Windows Authenticode  digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,   which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature. \nBecause of the varying executable file types and corresponding signature formats, Microsoft created software components called Subject Interface Packages (SIPs)  to provide a layer of abstraction between API functions and files. SIPs are responsible for enabling API functions to create, retrieve, calculate, and verify signatures. Unique SIPs exist for most file formats (Executable, PowerShell, Installer, etc., with catalog signing providing a catch-all  ) and are identified by globally unique identifiers (GUIDs). \nSimilar to Code Signing, adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system. Adversaries may hijack SIP and trust provider components to mislead operating system and whitelisting tools to classify malicious (or any) code as signed by: \n\nModifying the Dll and FuncName Registry values in HKLM\\SOFTWARE[\\WOW6432Node]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllGetSignedDataMsg{SIP_GUID} that point to the dynamic link library (DLL) providing a SIP\u2019s CryptSIPDllGetSignedDataMsg function, which retrieves an encoded digital certificate from a signed file. By pointing to a maliciously-crafted DLL with an exported function that always returns a known good signature value (ex: a Microsoft signature for Portable Executables) rather than the file\u2019s real signature, an adversary can apply an acceptable signature value to all files using that SIP  (although a hash mismatch will likely occur, invalidating the signature, since the hash returned by the function will not match the value computed from the file).\nModifying the Dll and FuncName Registry values in HKLM\\SOFTWARE[WOW6432Node]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllVerifyIndirectData{SIP_GUID} that point to the DLL providing a SIP\u2019s CryptSIPDllVerifyIndirectData function, which validates a file\u2019s computed hash against the signed hash value. By pointing to a maliciously-crafted DLL with an exported function that always returns TRUE (indicating that the validation was successful), an adversary can successfully validate any file (with a legitimate signature) using that SIP  (with or without hijacking the previously mentioned CryptSIPDllGetSignedDataMsg function). This Registry value could also be redirected to a suitable exported function from an already present DLL, avoiding the requirement to drop and execute a new file on disk.\nModifying the DLL and Function Registry values in HKLM\\SOFTWARE[WOW6432Node]Microsoft\\Cryptography\\Providers\\Trust\\FinalPolicy{trust provider GUID} that point to the DLL providing a trust provider\u2019s FinalPolicy function, which is where the decoded and parsed signature is checked and the majority of trust decisions are made. Similar to hijacking SIP\u2019s CryptSIPDllVerifyIndirectData function, this value can be redirected to a suitable exported function from an already present DLL or a maliciously-crafted DLL (though the implementation of a trust provider is complex).\nNote: The above hijacks are also possible without modifying the Registry via DLL Search Order Hijacking.\n\nHijacking SIP or trust provider components can also enable persistent code execution, since these malicious components may be invoked by any application that performs code signing or signature validation. ", "signatures": [{"severity": "UNKNOWN", "description": "The binary has an Authenticode signature"}, {"severity": "UNKNOWN", "description": "The file have a Trusted Certificate"}]}]}, {"id": "TA0002", "name": "Execution", "link": "https://attack.mitre.org/tactics/TA0002/", "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ", "techniques": [{"id": "T1129", "name": "Shared Modules", "link": "https://attack.mitre.org/techniques/T1129/", "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.", "signatures": [{"severity": "UNKNOWN", "description": "Manalize Local SandBox Strings"}]}, {"id": "T1059", "name": "Command and Scripting Interpreter", "link": "https://attack.mitre.org/techniques/T1059/", "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.\nThere are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various Remote Services in order to achieve remote Execution.", "signatures": [{"severity": "UNKNOWN", "description": "Manalize Local SandBox Strings"}]}]}, {"id": "TA0007", "name": "Discovery", "link": "https://attack.mitre.org/tactics/TA0007/", "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what\u2019s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ", "techniques": [{"id": "T1082", "name": "System Information Discovery", "link": "https://attack.mitre.org/techniques/T1082/", "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). On ESXi servers, threat actors may gather system information from various esxcli utilities, such as system hostname get, system version get, and storage filesystem list (to list storage volumes).\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.\nSystem Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment. ", "signatures": [{"severity": "UNKNOWN", "description": "Manalize Local SandBox Strings"}]}, {"id": "T1614", "name": "System Location Discovery", "link": "https://attack.mitre.org/techniques/T1614/", "description": "Adversaries may gather information in an attempt to calculate the geographical location of a victim host. Adversaries may use the information from System Location Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nAdversaries may attempt to infer the location of a system using various system checks, such as time zone, keyboard layout, and/or language settings. Windows API functions such as GetLocaleInfoW can also be used to determine the locale of the host. In cloud environments, an instance's availability zone may also be discovered by accessing the instance metadata service from the instance.\nAdversaries may also attempt to infer the location of a victim host using IP addressing, such as via online geolocation IP-lookup services.", "signatures": [{"severity": "UNKNOWN", "description": "Manalize Local SandBox Strings"}]}]}]}, "Zenbox": {"tactics": [{"id": "TA0003", "name": "Persistence", "link": "https://attack.mitre.org/tactics/TA0003/", "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ", "techniques": [{"id": "T1574", "name": "Hijack Execution Flow", "link": "https://attack.mitre.org/techniques/T1574/", "description": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads."}, {"id": "T1574.002", "name": "DLL Side-Loading", "link": "https://attack.mitre.org/techniques/T1574/002/", "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.", "signatures": [{"severity": "INFO", "description": "Tries to load missing DLLs", "match_data": ["mscoree.dll", "apphelp.dll", "kernel.appcore.dll", "version.dll", "vcruntime140_clr0400.dll", "ucrtbase_clr0400.dll", "uxtheme.dll", "windows.storage.dll", "wintypes.dll", "profapi.dll", "bcrypt.dll", "cryptsp.dll", "rsaenh.dll", "cryptbase.dll", "iphlpapi.dll", "dnsapi.dll", "dhcpcsvc6.dll", "dhcpcsvc.dll", "winnsi.dll", "rasapi32.dll", "rtutils.dll", "rasman.dll", "mswsock.dll", "winhttp.dll", "ondemandconnroutehelper.dll", "rasadhlp.dll", "fwpuclnt.dll", "secur32.dll", "sspicli.dll", "schannel.dll", "ncrypt.dll", "ntasn1.dll", "ncryptsslp.dll", "msasn1.dll", "propsys.dll", "cfgmgr32.dll", "edputil.dll", "urlmon.dll", "iertutil.dll", "srvcli.dll", "netutils.dll", "windows.staterepositoryps.dll", "windows.staterepositoryclient.dll", "virtdisk.dll", "wldp.dll", "smartscreenps.dll", "shdocvw.dll", "appxdeploymentclient.dll", "activationmanager.dll", "windows.staterepositorycore.dll", "twinui.appcore.dll", "onecoreuapcommonproxystub.dll", "mrmcorer.dll", "bcp47mrm.dll", "windows.ui.dll"]}]}, {"id": "T1574.001", "name": "DLL", "link": "https://attack.mitre.org/techniques/T1574/001/", "description": "Adversaries may abuse dynamic-link library files (DLLs) in order to achieve persistence, escalate privileges, and evade defenses. DLLs are libraries that contain code and data that can be simultaneously utilized by multiple programs. While DLLs are not malicious by nature, they can be abused through mechanisms such as side-loading, hijacking search order, and phantom DLL hijacking.\nSpecific ways DLLs are abused by adversaries include:\nDLL Sideloading\nAdversaries may execute their own malicious payloads by side-loading DLLs. Side-loading involves hijacking which DLL a program loads by planting and then invoking a legitimate application that executes their payload(s).\nSide-loading positions both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.\nAdversaries may also side-load other packages, such as BPLs (Borland Package Library).\nDLL Search Order Hijacking\nAdversaries may execute their own malicious payloads by hijacking the search order that Windows uses to load DLLs. This search order is a sequence of special and standard search locations that a program checks when loading a DLL. An adversary can plant a trojan DLL in a directory that will be prioritized by the DLL search order over the location of a legitimate library. This will cause Windows to load the malicious DLL when it is called for by the victim program.\nDLL Redirection\nAdversaries may directly modify the search order via DLL redirection, which after being enabled (in the Registry or via the creation of a redirection file) may cause a program to load a DLL from a different location.\nPhantom DLL Hijacking\nAdversaries may leverage phantom DLL hijacking by targeting references to non-existent DLL files. They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.\nDLL Substitution\nAdversaries may target existing, valid DLL files and substitute them with their own malicious DLLs, planting them with the same name and in the same location as the valid DLL file.\nPrograms that fall victim to DLL hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace, evading defenses.\nRemote DLL hijacking can occur when a program sets its current directory to a remote location, such as a Web share, before loading a DLL.\nIf a valid DLL is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation.", "signatures": [{"severity": "INFO", "description": "EXE hyjacking vulnerability found", "match_data": ["C:\\Users\\user\\ab0068ea-9ac4-47a3-bdd7-d659c0ffd9a1@cache\\VideoManagerEntry.exe"]}]}]}, {"id": "TA0004", "name": "Privilege Escalation", "link": "https://attack.mitre.org/tactics/TA0004/", "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ", "techniques": [{"id": "T1574", "name": "Hijack Execution Flow", "link": "https://attack.mitre.org/techniques/T1574/", "description": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads."}, {"id": "T1574.002", "name": "DLL Side-Loading", "link": "https://attack.mitre.org/techniques/T1574/002/", "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.", "signatures": [{"severity": "INFO", "description": "Tries to load missing DLLs", "match_data": ["mscoree.dll", "apphelp.dll", "kernel.appcore.dll", "version.dll", "vcruntime140_clr0400.dll", "ucrtbase_clr0400.dll", "uxtheme.dll", "windows.storage.dll", "wintypes.dll", "profapi.dll", "bcrypt.dll", "cryptsp.dll", "rsaenh.dll", "cryptbase.dll", "iphlpapi.dll", "dnsapi.dll", "dhcpcsvc6.dll", "dhcpcsvc.dll", "winnsi.dll", "rasapi32.dll", "rtutils.dll", "rasman.dll", "mswsock.dll", "winhttp.dll", "ondemandconnroutehelper.dll", "rasadhlp.dll", "fwpuclnt.dll", "secur32.dll", "sspicli.dll", "schannel.dll", "ncrypt.dll", "ntasn1.dll", "ncryptsslp.dll", "msasn1.dll", "propsys.dll", "cfgmgr32.dll", "edputil.dll", "urlmon.dll", "iertutil.dll", "srvcli.dll", "netutils.dll", "windows.staterepositoryps.dll", "windows.staterepositoryclient.dll", "virtdisk.dll", "wldp.dll", "smartscreenps.dll", "shdocvw.dll", "appxdeploymentclient.dll", "activationmanager.dll", "windows.staterepositorycore.dll", "twinui.appcore.dll", "onecoreuapcommonproxystub.dll", "mrmcorer.dll", "bcp47mrm.dll", "windows.ui.dll"]}]}, {"id": "T1574.001", "name": "DLL", "link": "https://attack.mitre.org/techniques/T1574/001/", "description": "Adversaries may abuse dynamic-link library files (DLLs) in order to achieve persistence, escalate privileges, and evade defenses. DLLs are libraries that contain code and data that can be simultaneously utilized by multiple programs. While DLLs are not malicious by nature, they can be abused through mechanisms such as side-loading, hijacking search order, and phantom DLL hijacking.\nSpecific ways DLLs are abused by adversaries include:\nDLL Sideloading\nAdversaries may execute their own malicious payloads by side-loading DLLs. Side-loading involves hijacking which DLL a program loads by planting and then invoking a legitimate application that executes their payload(s).\nSide-loading positions both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.\nAdversaries may also side-load other packages, such as BPLs (Borland Package Library).\nDLL Search Order Hijacking\nAdversaries may execute their own malicious payloads by hijacking the search order that Windows uses to load DLLs. This search order is a sequence of special and standard search locations that a program checks when loading a DLL. An adversary can plant a trojan DLL in a directory that will be prioritized by the DLL search order over the location of a legitimate library. This will cause Windows to load the malicious DLL when it is called for by the victim program.\nDLL Redirection\nAdversaries may directly modify the search order via DLL redirection, which after being enabled (in the Registry or via the creation of a redirection file) may cause a program to load a DLL from a different location.\nPhantom DLL Hijacking\nAdversaries may leverage phantom DLL hijacking by targeting references to non-existent DLL files. They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.\nDLL Substitution\nAdversaries may target existing, valid DLL files and substitute them with their own malicious DLLs, planting them with the same name and in the same location as the valid DLL file.\nPrograms that fall victim to DLL hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace, evading defenses.\nRemote DLL hijacking can occur when a program sets its current directory to a remote location, such as a Web share, before loading a DLL.\nIf a valid DLL is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation.", "signatures": [{"severity": "INFO", "description": "EXE hyjacking vulnerability found", "match_data": ["C:\\Users\\user\\ab0068ea-9ac4-47a3-bdd7-d659c0ffd9a1@cache\\VideoManagerEntry.exe"]}]}]}, {"id": "TA0005", "name": "Defense Evasion", "link": "https://attack.mitre.org/tactics/TA0005/", "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics\u2019 techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ", "techniques": [{"id": "T1574", "name": "Hijack Execution Flow", "link": "https://attack.mitre.org/techniques/T1574/", "description": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads."}, {"id": "T1574.002", "name": "DLL Side-Loading", "link": "https://attack.mitre.org/techniques/T1574/002/", "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.", "signatures": [{"severity": "INFO", "description": "Tries to load missing DLLs", "match_data": ["mscoree.dll", "apphelp.dll", "kernel.appcore.dll", "version.dll", "vcruntime140_clr0400.dll", "ucrtbase_clr0400.dll", "uxtheme.dll", "windows.storage.dll", "wintypes.dll", "profapi.dll", "bcrypt.dll", "cryptsp.dll", "rsaenh.dll", "cryptbase.dll", "iphlpapi.dll", "dnsapi.dll", "dhcpcsvc6.dll", "dhcpcsvc.dll", "winnsi.dll", "rasapi32.dll", "rtutils.dll", "rasman.dll", "mswsock.dll", "winhttp.dll", "ondemandconnroutehelper.dll", "rasadhlp.dll", "fwpuclnt.dll", "secur32.dll", "sspicli.dll", "schannel.dll", "ncrypt.dll", "ntasn1.dll", "ncryptsslp.dll", "msasn1.dll", "propsys.dll", "cfgmgr32.dll", "edputil.dll", "urlmon.dll", "iertutil.dll", "srvcli.dll", "netutils.dll", "windows.staterepositoryps.dll", "windows.staterepositoryclient.dll", "virtdisk.dll", "wldp.dll", "smartscreenps.dll", "shdocvw.dll", "appxdeploymentclient.dll", "activationmanager.dll", "windows.staterepositorycore.dll", "twinui.appcore.dll", "onecoreuapcommonproxystub.dll", "mrmcorer.dll", "bcp47mrm.dll", "windows.ui.dll"]}]}, {"id": "T1574.001", "name": "DLL", "link": "https://attack.mitre.org/techniques/T1574/001/", "description": "Adversaries may abuse dynamic-link library files (DLLs) in order to achieve persistence, escalate privileges, and evade defenses. DLLs are libraries that contain code and data that can be simultaneously utilized by multiple programs. While DLLs are not malicious by nature, they can be abused through mechanisms such as side-loading, hijacking search order, and phantom DLL hijacking.\nSpecific ways DLLs are abused by adversaries include:\nDLL Sideloading\nAdversaries may execute their own malicious payloads by side-loading DLLs. Side-loading involves hijacking which DLL a program loads by planting and then invoking a legitimate application that executes their payload(s).\nSide-loading positions both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.\nAdversaries may also side-load other packages, such as BPLs (Borland Package Library).\nDLL Search Order Hijacking\nAdversaries may execute their own malicious payloads by hijacking the search order that Windows uses to load DLLs. This search order is a sequence of special and standard search locations that a program checks when loading a DLL. An adversary can plant a trojan DLL in a directory that will be prioritized by the DLL search order over the location of a legitimate library. This will cause Windows to load the malicious DLL when it is called for by the victim program.\nDLL Redirection\nAdversaries may directly modify the search order via DLL redirection, which after being enabled (in the Registry or via the creation of a redirection file) may cause a program to load a DLL from a different location.\nPhantom DLL Hijacking\nAdversaries may leverage phantom DLL hijacking by targeting references to non-existent DLL files. They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.\nDLL Substitution\nAdversaries may target existing, valid DLL files and substitute them with their own malicious DLLs, planting them with the same name and in the same location as the valid DLL file.\nPrograms that fall victim to DLL hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace, evading defenses.\nRemote DLL hijacking can occur when a program sets its current directory to a remote location, such as a Web share, before loading a DLL.\nIf a valid DLL is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation.", "signatures": [{"severity": "INFO", "description": "EXE hyjacking vulnerability found", "match_data": ["C:\\Users\\user\\ab0068ea-9ac4-47a3-bdd7-d659c0ffd9a1@cache\\VideoManagerEntry.exe"]}]}, {"id": "T1036", "name": "Masquerading", "link": "https://attack.mitre.org/techniques/T1036/", "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\nRenaming abusable system utilities to evade security monitoring is also a form of Masquerading.", "signatures": [{"severity": "INFO", "description": "Creates files inside the user directory", "match_data": ["C:\\Users\\user\\ab0068ea-9ac4-47a3-bdd7-d659c0ffd9a1@cache"]}]}, {"id": "T1562", "name": "Impair Defenses", "link": "https://attack.mitre.org/techniques/T1562/", "description": "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.\nAdversaries may also impair routine operations that contribute to defensive hygiene, such as blocking users from logging out, preventing a system from shutting down, or disabling or modifying the update process. Adversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components. These restrictions can further enable malicious operations as well as the continued propagation of incidents."}, {"id": "T1562.001", "name": "Disable or Modify Tools", "link": "https://attack.mitre.org/techniques/T1562/001/", "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to Indicator Blocking, adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection. Alternatively, they may add new directories to an endpoint detection and response (EDR) tool\u2019s exclusion list, enabling them to hide malicious files via File/Path Exclusions.\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational may be modified to tamper with and potentially disable Sysmon logging. \nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools. For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. Exploitation for Privilege Escalation), which may lead to bypassing anti-tampering features.", "signatures": [{"severity": "INFO", "description": "Creates guard pages, often used to prevent reverse engineering and debugging", "match_data": ["page read and write | page guard"]}]}, {"id": "T1497", "name": "Virtualization/Sandbox Evasion", "link": "https://attack.mitre.org/techniques/T1497/", "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.", "signatures": [{"severity": "INFO", "description": "Contains medium sleeps (>= 30s)", "match_data": ["delay time: 922337203685477", "delay time: 599267", "delay time: 599044", "delay time: 598913", "delay time: 598739", "delay time: 598551", "delay time: 598322", "delay time: 598052", "delay time: 597847", "delay time: 597676", "delay time: 597531", "delay time: 597263", "delay time: 597082", "delay time: 596914", "delay time: 596793", "delay time: 596592", "delay time: 596455", "delay time: 595132", "delay time: 594905", "delay time: 593790", "delay time: 593625", "delay time: 593309", "delay time: 593160", "delay time: 592848", "delay time: 592694", "delay time: 592445", "delay time: 592096", "delay time: 588846", "delay time: 587547", "delay time: 587360", "delay time: 587109", "delay time: 586987", "delay time: 586866", "delay time: 586743", "delay time: 586639", "delay time: 586203", "delay time: 585929", "delay time: 585421", "delay time: 584401", "delay time: 583925", "delay time: 583716", "delay time: 583515", "delay time: 582909", "delay time: 582785", "delay time: 581490", "delay time: 581315", "delay time: 579811", "delay time: 579624", "delay time: 578832", "delay time: 578211", "delay time: 577750", "delay time: 577549", "delay time: 577394", "delay time: 577211", "delay time: 577098", "delay time: 576888", "delay time: 576508", "delay time: 576231", "delay time: 576055", "delay time: 575883", "delay time: 575685", "delay time: 575566", "delay time: 575436", "delay time: 575263", "delay time: 575122", "delay time: 574962", "delay time: 574809", "delay time: 574636", "delay time: 574420", "delay time: 574156", "delay time: 573937", "delay time: 573788", "delay time: 573603", "delay time: 573460", "delay time: 573302", "delay time: 573009", "delay time: 572879", "delay time: 572626", "delay time: 572218", "delay time: 571573", "delay time: 570506", "delay time: 570371", "delay time: 570105", "delay time: 569743", "delay time: 569022", "delay time: 568596", "delay time: 568078", "delay time: 567471", "delay time: 566569", "delay time: 566207", "delay time: 565833", "delay time: 565246", "delay time: 564858", "delay time: 564607", "delay time: 564253", "delay time: 563730", "delay time: 563109", "delay time: 562166", "delay time: 560897", "delay time: 559742", "delay time: 559473", "delay time: 559318", "delay time: 559014", "delay time: 558698", "delay time: 558370", "delay time: 558221", "delay time: 558038", "delay time: 557701", "delay time: 557358", "delay time: 556995", "delay time: 556577", "delay time: 554663", "delay time: 554267", "delay time: 553792", "delay time: 553549", "delay time: 553400", "delay time: 553051", "delay time: 552771", "delay time: 552169", "delay time: 551713", "delay time: 549571", "delay time: 548815", "delay time: 547720", "delay time: 545026", "delay time: 544313", "delay time: 544022", "delay time: 543134", "delay time: 542765", "delay time: 542222", "delay time: 542055", "delay time: 541428", "delay time: 540935", "delay time: 540270", "delay time: 539930", "delay time: 539679", "delay time: 538956", "delay time: 538648", "delay time: 538529", "delay time: 536400", "delay time: 535893", "delay time: 535742", "delay time: 535570", "delay time: 535383", "delay time: 535114", "delay time: 534888", "delay time: 534743", "delay time: 534613", "delay time: 534358", "delay time: 534235", "delay time: 534072", "delay time: 533895", "delay time: 533762", "delay time: 533548", "delay time: 533411", "delay time: 533110", "delay time: 532965", "delay time: 532773", "delay time: 532600", "delay time: 532387", "delay time: 532229", "delay time: 531972", "delay time: 531724", "delay time: 531557", "delay time: 531294", "delay time: 530911", "delay time: 530591", "delay time: 530424", "delay time: 529332", "delay time: 528928", "delay time: 528697", "delay time: 528517", "delay time: 528339", "delay time: 528226", "delay time: 528110", "delay time: 527895", "delay time: 527291", "delay time: 527164", "delay time: 527045", "delay time: 526888", "delay time: 524584", "delay time: 524351", "delay time: 524167", "delay time: 523949", "delay time: 523771", "delay time: 523513", "delay time: 523093", "delay time: 522602", "delay time: 519997", "delay time: 519699", "delay time: 519406", "delay time: 519273", "delay time: 519057", "delay time: 518928", "delay time: 518688", "-1844674407370954s >= -30000s", "-50000s >= -30000s", "4793 > 30", "339 > 30", "-599267s >= -30000s", "-599044s >= -30000s", "-598913s >= -30000s", "-598739s >= -30000s", "-598551s >= -30000s", "-598322s >= -30000s", "-598052s >= -30000s", "-597847s >= -30000s", "-597676s >= -30000s", "-597531s >= -30000s", "-597263s >= -30000s", "-597082s >= -30000s", "-596914s >= -30000s", "-596793s >= -30000s", "-596592s >= -30000s", "-596455s >= -30000s", "-595132s >= -30000s", "-594905s >= -30000s", "-593790s >= -30000s", "-593625s >= -30000s", "-593309s >= -30000s", "-593160s >= -30000s", "-592848s >= -30000s", "-592694s >= -30000s", "-592445s >= -30000s", "-592096s >= -30000s", "-588846s >= -30000s", "-587547s >= -30000s", "-587360s >= -30000s", "-587109s >= -30000s", "-586987s >= -30000s", "-586866s >= -30000s", "-586743s >= -30000s", "-586639s >= -30000s", "-586203s >= -30000s", "-585929s >= -30000s", "-585421s >= -30000s", "-584401s >= -30000s", "-583925s >= -30000s", "-583716s >= -30000s", "-583515s >= -30000s", "-582909s >= -30000s", "-582785s >= -30000s", "-581490s >= -30000s", "-581315s >= -30000s", "-579811s >= -30000s", "-579624s >= -30000s", "-578832s >= -30000s", "-578211s >= -30000s", "-577750s >= -30000s", "-577549s >= -30000s", "-577394s >= -30000s", "-577211s >= -30000s", "-577098s >= -30000s", "-576888s >= -30000s", "-576508s >= -30000s", "-576231s >= -30000s", "-576055s >= -30000s", "-575883s >= -30000s", "-575685s >= -30000s", "-575566s >= -30000s", "-575436s >= -30000s", "-575263s >= -30000s", "-575122s >= -30000s", "-574962s >= -30000s", "-574809s >= -30000s", "-574636s >= -30000s", "-574420s >= -30000s", "-574156s >= -30000s", "-573937s >= -30000s", "-573788s >= -30000s", "-573603s >= -30000s", "-573460s >= -30000s", "-573302s >= -30000s", "-573009s >= -30000s", "-572879s >= -30000s", "-572626s >= -30000s", "-572218s >= -30000s", "-571573s >= -30000s", "-570506s >= -30000s", "-570371s >= -30000s", "-570105s >= -30000s", "-569743s >= -30000s", "-569022s >= -30000s", "-568596s >= -30000s", "-568078s >= -30000s", "-567471s >= -30000s", "-566569s >= -30000s", "-566207s >= -30000s", "-565833s >= -30000s", "-565246s >= -30000s", "-564858s >= -30000s", "-564607s >= -30000s", "-564253s >= -30000s", "-563730s >= -30000s", "-563109s >= -30000s", "-562166s >= -30000s", "-560897s >= -30000s", "-559742s >= -30000s", "-559473s >= -30000s", "-559318s >= -30000s", "-559014s >= -30000s", "-558698s >= -30000s", "-558370s >= -30000s", "-558221s >= -30000s", "-558038s >= -30000s", "-557701s >= -30000s", "-557358s >= -30000s", "-556995s >= -30000s", "-556577s >= -30000s", "-554663s >= -30000s", "-554267s >= -30000s", "-553792s >= -30000s", "-553549s >= -30000s", "-553400s >= -30000s", "-553051s >= -30000s", "-552771s >= -30000s", "-552169s >= -30000s", "-551713s >= -30000s", "-549571s >= -30000s", "-548815s >= -30000s", "-547720s >= -30000s", "-545026s >= -30000s", "-544313s >= -30000s", "-544022s >= -30000s", "-543134s >= -30000s", "-542765s >= -30000s", "-542222s >= -30000s", "-542055s >= -30000s", "-541428s >= -30000s", "-540935s >= -30000s", "-540270s >= -30000s", "-539930s >= -30000s", "-539679s >= -30000s", "-538956s >= -30000s", "-538648s >= -30000s", "-538529s >= -30000s", "-536400s >= -30000s", "-535893s >= -30000s", "-535742s >= -30000s", "-535570s >= -30000s", "-535383s >= -30000s", "-535114s >= -30000s", "-534888s >= -30000s", "-534743s >= -30000s", "-534613s >= -30000s", "-534358s >= -30000s", "-534235s >= -30000s", "-534072s >= -30000s", "-533895s >= -30000s", "-533762s >= -30000s", "-533548s >= -30000s", "-533411s >= -30000s", "-533110s >= -30000s", "-532965s >= -30000s", "-532773s >= -30000s", "-532600s >= -30000s", "-532387s >= -30000s", "-532229s >= -30000s", "-531972s >= -30000s", "-531724s >= -30000s", "-531557s >= -30000s", "-531294s >= -30000s", "-530911s >= -30000s", "-530591s >= -30000s", "-530424s >= -30000s", "-529332s >= -30000s", "-528928s >= -30000s", "-528697s >= -30000s", "-528517s >= -30000s", "-528339s >= -30000s", "-528226s >= -30000s", "-528110s >= -30000s", "-527895s >= -30000s", "-527291s >= -30000s", "-527164s >= -30000s", "-527045s >= -30000s", "-526888s >= -30000s", "-524584s >= -30000s", "-524351s >= -30000s", "-524167s >= -30000s", "-523949s >= -30000s", "-523771s >= -30000s", "-523513s >= -30000s", "-523093s >= -30000s", "-522602s >= -30000s", "-519997s >= -30000s", "-519699s >= -30000s", "-519406s >= -30000s", "-519273s >= -30000s", "-519057s >= -30000s", "-518928s >= -30000s", "-518688s >= -30000s", "-922337203685477s >= -30000s", "delay time: 922337203685477", "delay time: 599267", "delay time: 599044", "delay time: 598913", "delay time: 598739", "delay time: 598551", "delay time: 598322", "delay time: 598052", "delay time: 597847", "delay time: 597676", "delay time: 597531", "delay time: 597263", "delay time: 597082", "delay time: 596914", "delay time: 596793", "delay time: 596592", "delay time: 596455", "delay time: 595132", "delay time: 594905", "delay time: 593790", "delay time: 593625", "delay time: 593309", "delay time: 593160", "delay time: 592848", "delay time: 592694", "delay time: 592445", "delay time: 592096", "delay time: 588846", "delay time: 587547", "delay time: 587360", "delay time: 587109", "delay time: 586987", "delay time: 586866", "delay time: 586743", "delay time: 586639", "delay time: 586203", "delay time: 585929", "delay time: 585421", "delay time: 584401", "delay time: 583925", "delay time: 583716", "delay time: 583515", "delay time: 582909", "delay time: 582785", "delay time: 581490", "delay time: 581315", "delay time: 579811", "delay time: 579624", "delay time: 578832", "delay time: 578211", "delay time: 577750", "delay time: 577549", "delay time: 577394", "delay time: 577211", "delay time: 577098", "delay time: 576888", "delay time: 576508", "delay time: 576231", "delay time: 576055", "delay time: 575883", "delay time: 575685", "delay time: 575566", "delay time: 575436", "delay time: 575263", "delay time: 575122", "delay time: 574962", "delay time: 574809", "delay time: 574636", "delay time: 574420", "delay time: 574156", "delay time: 573937", "delay time: 573788", "delay time: 573603", "delay time: 573460", "delay time: 573302", "delay time: 573009", "delay time: 572879", "delay time: 572626", "delay time: 572218", "delay time: 571573", "delay time: 570506", "delay time: 570371", "delay time: 570105", "delay time: 569743", "delay time: 569022", "delay time: 568596", "delay time: 568078", "delay time: 567471", "delay time: 566569", "delay time: 566207", "delay time: 565833", "delay time: 565246", "delay time: 564858", "delay time: 564607", "delay time: 564253", "delay time: 563730", "delay time: 563109", "delay time: 562166", "delay time: 560897", "delay time: 559742", "delay time: 559473", "delay time: 559318", "delay time: 559014", "delay time: 558698", "delay time: 558370", "delay time: 558221", "delay time: 558038", "delay time: 557701", "delay time: 557358", "delay time: 556995", "delay time: 556577", "delay time: 554663", "delay time: 554267", "delay time: 553792", "delay time: 553549", "delay time: 553400", "delay time: 553051", "delay time: 552771", "delay time: 552169", "delay time: 551713", "delay time: 549571", "delay time: 548815", "delay time: 547720", "delay time: 545026", "delay time: 544313", "delay time: 544022", "delay time: 543134", "delay time: 542765", "delay time: 542222", "delay time: 542055", "delay time: 541428", "delay time: 540935", "delay time: 540270", "delay time: 539930", "delay time: 539679", "delay time: 538956", "delay time: 538648", "delay time: 538529", "delay time: 536400", "delay time: 535893", "delay time: 535742", "delay time: 535570", "delay time: 535383", "delay time: 535114", "delay time: 534888", "delay time: 534743", "delay time: 534613", "delay time: 534358", "delay time: 534235", "delay time: 534072", "delay time: 533895", "delay time: 533762", "delay time: 533548", "delay time: 533411", "delay time: 533110", "delay time: 532965", "delay time: 532773", "delay time: 532600", "delay time: 532387", "delay time: 532229", "delay time: 531972", "delay time: 531724", "delay time: 531557", "delay time: 531294", "delay time: 530911", "delay time: 530591", "delay time: 530424", "delay time: 529332", "delay time: 528928", "delay time: 528697", "delay time: 528517", "delay time: 528339", "delay time: 528226", "delay time: 528110", "delay time: 527895", "delay time: 527291", "delay time: 527164", "delay time: 527045", "delay time: 526888", "delay time: 524584", "delay time: 524351", "delay time: 524167", "delay time: 523949", "delay time: 523771", "delay time: 523513", "delay time: 523093", "delay time: 522602", "delay time: 519997", "delay time: 519699", "delay time: 519406", "delay time: 519273", "delay time: 519057", "delay time: 518928", "delay time: 518688", "1980000 memory reserve | memory write watch", "32E0000 memory reserve | memory write watch", "52E0000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "May sleep (evasive loops) to hinder dynamic analysis", "match_data": ["delay time: 922337203685477", "delay time: 599267", "delay time: 599044", "delay time: 598913", "delay time: 598739", "delay time: 598551", "delay time: 598322", "delay time: 598052", "delay time: 597847", "delay time: 597676", "delay time: 597531", "delay time: 597263", "delay time: 597082", "delay time: 596914", "delay time: 596793", "delay time: 596592", "delay time: 596455", "delay time: 595132", "delay time: 594905", "delay time: 593790", "delay time: 593625", "delay time: 593309", "delay time: 593160", "delay time: 592848", "delay time: 592694", "delay time: 592445", "delay time: 592096", "delay time: 588846", "delay time: 587547", "delay time: 587360", "delay time: 587109", "delay time: 586987", "delay time: 586866", "delay time: 586743", "delay time: 586639", "delay time: 586203", "delay time: 585929", "delay time: 585421", "delay time: 584401", "delay time: 583925", "delay time: 583716", "delay time: 583515", "delay time: 582909", "delay time: 582785", "delay time: 581490", "delay time: 581315", "delay time: 579811", "delay time: 579624", "delay time: 578832", "delay time: 578211", "delay time: 577750", "delay time: 577549", "delay time: 577394", "delay time: 577211", "delay time: 577098", "delay time: 576888", "delay time: 576508", "delay time: 576231", "delay time: 576055", "delay time: 575883", "delay time: 575685", "delay time: 575566", "delay time: 575436", "delay time: 575263", "delay time: 575122", "delay time: 574962", "delay time: 574809", "delay time: 574636", "delay time: 574420", "delay time: 574156", "delay time: 573937", "delay time: 573788", "delay time: 573603", "delay time: 573460", "delay time: 573302", "delay time: 573009", "delay time: 572879", "delay time: 572626", "delay time: 572218", "delay time: 571573", "delay time: 570506", "delay time: 570371", "delay time: 570105", "delay time: 569743", "delay time: 569022", "delay time: 568596", "delay time: 568078", "delay time: 567471", "delay time: 566569", "delay time: 566207", "delay time: 565833", "delay time: 565246", "delay time: 564858", "delay time: 564607", "delay time: 564253", "delay time: 563730", "delay time: 563109", "delay time: 562166", "delay time: 560897", "delay time: 559742", "delay time: 559473", "delay time: 559318", "delay time: 559014", "delay time: 558698", "delay time: 558370", "delay time: 558221", "delay time: 558038", "delay time: 557701", "delay time: 557358", "delay time: 556995", "delay time: 556577", "delay time: 554663", "delay time: 554267", "delay time: 553792", "delay time: 553549", "delay time: 553400", "delay time: 553051", "delay time: 552771", "delay time: 552169", "delay time: 551713", "delay time: 549571", "delay time: 548815", "delay time: 547720", "delay time: 545026", "delay time: 544313", "delay time: 544022", "delay time: 543134", "delay time: 542765", "delay time: 542222", "delay time: 542055", "delay time: 541428", "delay time: 540935", "delay time: 540270", "delay time: 539930", "delay time: 539679", "delay time: 538956", "delay time: 538648", "delay time: 538529", "delay time: 536400", "delay time: 535893", "delay time: 535742", "delay time: 535570", "delay time: 535383", "delay time: 535114", "delay time: 534888", "delay time: 534743", "delay time: 534613", "delay time: 534358", "delay time: 534235", "delay time: 534072", "delay time: 533895", "delay time: 533762", "delay time: 533548", "delay time: 533411", "delay time: 533110", "delay time: 532965", "delay time: 532773", "delay time: 532600", "delay time: 532387", "delay time: 532229", "delay time: 531972", "delay time: 531724", "delay time: 531557", "delay time: 531294", "delay time: 530911", "delay time: 530591", "delay time: 530424", "delay time: 529332", "delay time: 528928", "delay time: 528697", "delay time: 528517", "delay time: 528339", "delay time: 528226", "delay time: 528110", "delay time: 527895", "delay time: 527291", "delay time: 527164", "delay time: 527045", "delay time: 526888", "delay time: 524584", "delay time: 524351", "delay time: 524167", "delay time: 523949", "delay time: 523771", "delay time: 523513", "delay time: 523093", "delay time: 522602", "delay time: 519997", "delay time: 519699", "delay time: 519406", "delay time: 519273", "delay time: 519057", "delay time: 518928", "delay time: 518688", "-1844674407370954s >= -30000s", "-50000s >= -30000s", "4793 > 30", "339 > 30", "-599267s >= -30000s", "-599044s >= -30000s", "-598913s >= -30000s", "-598739s >= -30000s", "-598551s >= -30000s", "-598322s >= -30000s", "-598052s >= -30000s", "-597847s >= -30000s", "-597676s >= -30000s", "-597531s >= -30000s", "-597263s >= -30000s", "-597082s >= -30000s", "-596914s >= -30000s", "-596793s >= -30000s", "-596592s >= -30000s", "-596455s >= -30000s", "-595132s >= -30000s", "-594905s >= -30000s", "-593790s >= -30000s", "-593625s >= -30000s", "-593309s >= -30000s", "-593160s >= -30000s", "-592848s >= -30000s", "-592694s >= -30000s", "-592445s >= -30000s", "-592096s >= -30000s", "-588846s >= -30000s", "-587547s >= -30000s", "-587360s >= -30000s", "-587109s >= -30000s", "-586987s >= -30000s", "-586866s >= -30000s", "-586743s >= -30000s", "-586639s >= -30000s", "-586203s >= -30000s", "-585929s >= -30000s", "-585421s >= -30000s", "-584401s >= -30000s", "-583925s >= -30000s", "-583716s >= -30000s", "-583515s >= -30000s", "-582909s >= -30000s", "-582785s >= -30000s", "-581490s >= -30000s", "-581315s >= -30000s", "-579811s >= -30000s", "-579624s >= -30000s", "-578832s >= -30000s", "-578211s >= -30000s", "-577750s >= -30000s", "-577549s >= -30000s", "-577394s >= -30000s", "-577211s >= -30000s", "-577098s >= -30000s", "-576888s >= -30000s", "-576508s >= -30000s", "-576231s >= -30000s", "-576055s >= -30000s", "-575883s >= -30000s", "-575685s >= -30000s", "-575566s >= -30000s", "-575436s >= -30000s", "-575263s >= -30000s", "-575122s >= -30000s", "-574962s >= -30000s", "-574809s >= -30000s", "-574636s >= -30000s", "-574420s >= -30000s", "-574156s >= -30000s", "-573937s >= -30000s", "-573788s >= -30000s", "-573603s >= -30000s", "-573460s >= -30000s", "-573302s >= -30000s", "-573009s >= -30000s", "-572879s >= -30000s", "-572626s >= -30000s", "-572218s >= -30000s", "-571573s >= -30000s", "-570506s >= -30000s", "-570371s >= -30000s", "-570105s >= -30000s", "-569743s >= -30000s", "-569022s >= -30000s", "-568596s >= -30000s", "-568078s >= -30000s", "-567471s >= -30000s", "-566569s >= -30000s", "-566207s >= -30000s", "-565833s >= -30000s", "-565246s >= -30000s", "-564858s >= -30000s", "-564607s >= -30000s", "-564253s >= -30000s", "-563730s >= -30000s", "-563109s >= -30000s", "-562166s >= -30000s", "-560897s >= -30000s", "-559742s >= -30000s", "-559473s >= -30000s", "-559318s >= -30000s", "-559014s >= -30000s", "-558698s >= -30000s", "-558370s >= -30000s", "-558221s >= -30000s", "-558038s >= -30000s", "-557701s >= -30000s", "-557358s >= -30000s", "-556995s >= -30000s", "-556577s >= -30000s", "-554663s >= -30000s", "-554267s >= -30000s", "-553792s >= -30000s", "-553549s >= -30000s", "-553400s >= -30000s", "-553051s >= -30000s", "-552771s >= -30000s", "-552169s >= -30000s", "-551713s >= -30000s", "-549571s >= -30000s", "-548815s >= -30000s", "-547720s >= -30000s", "-545026s >= -30000s", "-544313s >= -30000s", "-544022s >= -30000s", "-543134s >= -30000s", "-542765s >= -30000s", "-542222s >= -30000s", "-542055s >= -30000s", "-541428s >= -30000s", "-540935s >= -30000s", "-540270s >= -30000s", "-539930s >= -30000s", "-539679s >= -30000s", "-538956s >= -30000s", "-538648s >= -30000s", "-538529s >= -30000s", "-536400s >= -30000s", "-535893s >= -30000s", "-535742s >= -30000s", "-535570s >= -30000s", "-535383s >= -30000s", "-535114s >= -30000s", "-534888s >= -30000s", "-534743s >= -30000s", "-534613s >= -30000s", "-534358s >= -30000s", "-534235s >= -30000s", "-534072s >= -30000s", "-533895s >= -30000s", "-533762s >= -30000s", "-533548s >= -30000s", "-533411s >= -30000s", "-533110s >= -30000s", "-532965s >= -30000s", "-532773s >= -30000s", "-532600s >= -30000s", "-532387s >= -30000s", "-532229s >= -30000s", "-531972s >= -30000s", "-531724s >= -30000s", "-531557s >= -30000s", "-531294s >= -30000s", "-530911s >= -30000s", "-530591s >= -30000s", "-530424s >= -30000s", "-529332s >= -30000s", "-528928s >= -30000s", "-528697s >= -30000s", "-528517s >= -30000s", "-528339s >= -30000s", "-528226s >= -30000s", "-528110s >= -30000s", "-527895s >= -30000s", "-527291s >= -30000s", "-527164s >= -30000s", "-527045s >= -30000s", "-526888s >= -30000s", "-524584s >= -30000s", "-524351s >= -30000s", "-524167s >= -30000s", "-523949s >= -30000s", "-523771s >= -30000s", "-523513s >= -30000s", "-523093s >= -30000s", "-522602s >= -30000s", "-519997s >= -30000s", "-519699s >= -30000s", "-519406s >= -30000s", "-519273s >= -30000s", "-519057s >= -30000s", "-518928s >= -30000s", "-518688s >= -30000s", "-922337203685477s >= -30000s", "delay time: 922337203685477", "delay time: 599267", "delay time: 599044", "delay time: 598913", "delay time: 598739", "delay time: 598551", "delay time: 598322", "delay time: 598052", "delay time: 597847", "delay time: 597676", "delay time: 597531", "delay time: 597263", "delay time: 597082", "delay time: 596914", "delay time: 596793", "delay time: 596592", "delay time: 596455", "delay time: 595132", "delay time: 594905", "delay time: 593790", "delay time: 593625", "delay time: 593309", "delay time: 593160", "delay time: 592848", "delay time: 592694", "delay time: 592445", "delay time: 592096", "delay time: 588846", "delay time: 587547", "delay time: 587360", "delay time: 587109", "delay time: 586987", "delay time: 586866", "delay time: 586743", "delay time: 586639", "delay time: 586203", "delay time: 585929", "delay time: 585421", "delay time: 584401", "delay time: 583925", "delay time: 583716", "delay time: 583515", "delay time: 582909", "delay time: 582785", "delay time: 581490", "delay time: 581315", "delay time: 579811", "delay time: 579624", "delay time: 578832", "delay time: 578211", "delay time: 577750", "delay time: 577549", "delay time: 577394", "delay time: 577211", "delay time: 577098", "delay time: 576888", "delay time: 576508", "delay time: 576231", "delay time: 576055", "delay time: 575883", "delay time: 575685", "delay time: 575566", "delay time: 575436", "delay time: 575263", "delay time: 575122", "delay time: 574962", "delay time: 574809", "delay time: 574636", "delay time: 574420", "delay time: 574156", "delay time: 573937", "delay time: 573788", "delay time: 573603", "delay time: 573460", "delay time: 573302", "delay time: 573009", "delay time: 572879", "delay time: 572626", "delay time: 572218", "delay time: 571573", "delay time: 570506", "delay time: 570371", "delay time: 570105", "delay time: 569743", "delay time: 569022", "delay time: 568596", "delay time: 568078", "delay time: 567471", "delay time: 566569", "delay time: 566207", "delay time: 565833", "delay time: 565246", "delay time: 564858", "delay time: 564607", "delay time: 564253", "delay time: 563730", "delay time: 563109", "delay time: 562166", "delay time: 560897", "delay time: 559742", "delay time: 559473", "delay time: 559318", "delay time: 559014", "delay time: 558698", "delay time: 558370", "delay time: 558221", "delay time: 558038", "delay time: 557701", "delay time: 557358", "delay time: 556995", "delay time: 556577", "delay time: 554663", "delay time: 554267", "delay time: 553792", "delay time: 553549", "delay time: 553400", "delay time: 553051", "delay time: 552771", "delay time: 552169", "delay time: 551713", "delay time: 549571", "delay time: 548815", "delay time: 547720", "delay time: 545026", "delay time: 544313", "delay time: 544022", "delay time: 543134", "delay time: 542765", "delay time: 542222", "delay time: 542055", "delay time: 541428", "delay time: 540935", "delay time: 540270", "delay time: 539930", "delay time: 539679", "delay time: 538956", "delay time: 538648", "delay time: 538529", "delay time: 536400", "delay time: 535893", "delay time: 535742", "delay time: 535570", "delay time: 535383", "delay time: 535114", "delay time: 534888", "delay time: 534743", "delay time: 534613", "delay time: 534358", "delay time: 534235", "delay time: 534072", "delay time: 533895", "delay time: 533762", "delay time: 533548", "delay time: 533411", "delay time: 533110", "delay time: 532965", "delay time: 532773", "delay time: 532600", "delay time: 532387", "delay time: 532229", "delay time: 531972", "delay time: 531724", "delay time: 531557", "delay time: 531294", "delay time: 530911", "delay time: 530591", "delay time: 530424", "delay time: 529332", "delay time: 528928", "delay time: 528697", "delay time: 528517", "delay time: 528339", "delay time: 528226", "delay time: 528110", "delay time: 527895", "delay time: 527291", "delay time: 527164", "delay time: 527045", "delay time: 526888", "delay time: 524584", "delay time: 524351", "delay time: 524167", "delay time: 523949", "delay time: 523771", "delay time: 523513", "delay time: 523093", "delay time: 522602", "delay time: 519997", "delay time: 519699", "delay time: 519406", "delay time: 519273", "delay time: 519057", "delay time: 518928", "delay time: 518688", "1980000 memory reserve | memory write watch", "32E0000 memory reserve | memory write watch", "52E0000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "Contains long sleeps (>= 3 min)", "match_data": ["delay time: 922337203685477", "delay time: 599267", "delay time: 599044", "delay time: 598913", "delay time: 598739", "delay time: 598551", "delay time: 598322", "delay time: 598052", "delay time: 597847", "delay time: 597676", "delay time: 597531", "delay time: 597263", "delay time: 597082", "delay time: 596914", "delay time: 596793", "delay time: 596592", "delay time: 596455", "delay time: 595132", "delay time: 594905", "delay time: 593790", "delay time: 593625", "delay time: 593309", "delay time: 593160", "delay time: 592848", "delay time: 592694", "delay time: 592445", "delay time: 592096", "delay time: 588846", "delay time: 587547", "delay time: 587360", "delay time: 587109", "delay time: 586987", "delay time: 586866", "delay time: 586743", "delay time: 586639", "delay time: 586203", "delay time: 585929", "delay time: 585421", "delay time: 584401", "delay time: 583925", "delay time: 583716", "delay time: 583515", "delay time: 582909", "delay time: 582785", "delay time: 581490", "delay time: 581315", "delay time: 579811", "delay time: 579624", "delay time: 578832", "delay time: 578211", "delay time: 577750", "delay time: 577549", "delay time: 577394", "delay time: 577211", "delay time: 577098", "delay time: 576888", "delay time: 576508", "delay time: 576231", "delay time: 576055", "delay time: 575883", "delay time: 575685", "delay time: 575566", "delay time: 575436", "delay time: 575263", "delay time: 575122", "delay time: 574962", "delay time: 574809", "delay time: 574636", "delay time: 574420", "delay time: 574156", "delay time: 573937", "delay time: 573788", "delay time: 573603", "delay time: 573460", "delay time: 573302", "delay time: 573009", "delay time: 572879", "delay time: 572626", "delay time: 572218", "delay time: 571573", "delay time: 570506", "delay time: 570371", "delay time: 570105", "delay time: 569743", "delay time: 569022", "delay time: 568596", "delay time: 568078", "delay time: 567471", "delay time: 566569", "delay time: 566207", "delay time: 565833", "delay time: 565246", "delay time: 564858", "delay time: 564607", "delay time: 564253", "delay time: 563730", "delay time: 563109", "delay time: 562166", "delay time: 560897", "delay time: 559742", "delay time: 559473", "delay time: 559318", "delay time: 559014", "delay time: 558698", "delay time: 558370", "delay time: 558221", "delay time: 558038", "delay time: 557701", "delay time: 557358", "delay time: 556995", "delay time: 556577", "delay time: 554663", "delay time: 554267", "delay time: 553792", "delay time: 553549", "delay time: 553400", "delay time: 553051", "delay time: 552771", "delay time: 552169", "delay time: 551713", "delay time: 549571", "delay time: 548815", "delay time: 547720", "delay time: 545026", "delay time: 544313", "delay time: 544022", "delay time: 543134", "delay time: 542765", "delay time: 542222", "delay time: 542055", "delay time: 541428", "delay time: 540935", "delay time: 540270", "delay time: 539930", "delay time: 539679", "delay time: 538956", "delay time: 538648", "delay time: 538529", "delay time: 536400", "delay time: 535893", "delay time: 535742", "delay time: 535570", "delay time: 535383", "delay time: 535114", "delay time: 534888", "delay time: 534743", "delay time: 534613", "delay time: 534358", "delay time: 534235", "delay time: 534072", "delay time: 533895", "delay time: 533762", "delay time: 533548", "delay time: 533411", "delay time: 533110", "delay time: 532965", "delay time: 532773", "delay time: 532600", "delay time: 532387", "delay time: 532229", "delay time: 531972", "delay time: 531724", "delay time: 531557", "delay time: 531294", "delay time: 530911", "delay time: 530591", "delay time: 530424", "delay time: 529332", "delay time: 528928", "delay time: 528697", "delay time: 528517", "delay time: 528339", "delay time: 528226", "delay time: 528110", "delay time: 527895", "delay time: 527291", "delay time: 527164", "delay time: 527045", "delay time: 526888", "delay time: 524584", "delay time: 524351", "delay time: 524167", "delay time: 523949", "delay time: 523771", "delay time: 523513", "delay time: 523093", "delay time: 522602", "delay time: 519997", "delay time: 519699", "delay time: 519406", "delay time: 519273", "delay time: 519057", "delay time: 518928", "delay time: 518688", "-1844674407370954s >= -30000s", "-50000s >= -30000s", "4793 > 30", "339 > 30", "-599267s >= -30000s", "-599044s >= -30000s", "-598913s >= -30000s", "-598739s >= -30000s", "-598551s >= -30000s", "-598322s >= -30000s", "-598052s >= -30000s", "-597847s >= -30000s", "-597676s >= -30000s", "-597531s >= -30000s", "-597263s >= -30000s", "-597082s >= -30000s", "-596914s >= -30000s", "-596793s >= -30000s", "-596592s >= -30000s", "-596455s >= -30000s", "-595132s >= -30000s", "-594905s >= -30000s", "-593790s >= -30000s", "-593625s >= -30000s", "-593309s >= -30000s", "-593160s >= -30000s", "-592848s >= -30000s", "-592694s >= -30000s", "-592445s >= -30000s", "-592096s >= -30000s", "-588846s >= -30000s", "-587547s >= -30000s", "-587360s >= -30000s", "-587109s >= -30000s", "-586987s >= -30000s", "-586866s >= -30000s", "-586743s >= -30000s", "-586639s >= -30000s", "-586203s >= -30000s", "-585929s >= -30000s", "-585421s >= -30000s", "-584401s >= -30000s", "-583925s >= -30000s", "-583716s >= -30000s", "-583515s >= -30000s", "-582909s >= -30000s", "-582785s >= -30000s", "-581490s >= -30000s", "-581315s >= -30000s", "-579811s >= -30000s", "-579624s >= -30000s", "-578832s >= -30000s", "-578211s >= -30000s", "-577750s >= -30000s", "-577549s >= -30000s", "-577394s >= -30000s", "-577211s >= -30000s", "-577098s >= -30000s", "-576888s >= -30000s", "-576508s >= -30000s", "-576231s >= -30000s", "-576055s >= -30000s", "-575883s >= -30000s", "-575685s >= -30000s", "-575566s >= -30000s", "-575436s >= -30000s", "-575263s >= -30000s", "-575122s >= -30000s", "-574962s >= -30000s", "-574809s >= -30000s", "-574636s >= -30000s", "-574420s >= -30000s", "-574156s >= -30000s", "-573937s >= -30000s", "-573788s >= -30000s", "-573603s >= -30000s", "-573460s >= -30000s", "-573302s >= -30000s", "-573009s >= -30000s", "-572879s >= -30000s", "-572626s >= -30000s", "-572218s >= -30000s", "-571573s >= -30000s", "-570506s >= -30000s", "-570371s >= -30000s", "-570105s >= -30000s", "-569743s >= -30000s", "-569022s >= -30000s", "-568596s >= -30000s", "-568078s >= -30000s", "-567471s >= -30000s", "-566569s >= -30000s", "-566207s >= -30000s", "-565833s >= -30000s", "-565246s >= -30000s", "-564858s >= -30000s", "-564607s >= -30000s", "-564253s >= -30000s", "-563730s >= -30000s", "-563109s >= -30000s", "-562166s >= -30000s", "-560897s >= -30000s", "-559742s >= -30000s", "-559473s >= -30000s", "-559318s >= -30000s", "-559014s >= -30000s", "-558698s >= -30000s", "-558370s >= -30000s", "-558221s >= -30000s", "-558038s >= -30000s", "-557701s >= -30000s", "-557358s >= -30000s", "-556995s >= -30000s", "-556577s >= -30000s", "-554663s >= -30000s", "-554267s >= -30000s", "-553792s >= -30000s", "-553549s >= -30000s", "-553400s >= -30000s", "-553051s >= -30000s", "-552771s >= -30000s", "-552169s >= -30000s", "-551713s >= -30000s", "-549571s >= -30000s", "-548815s >= -30000s", "-547720s >= -30000s", "-545026s >= -30000s", "-544313s >= -30000s", "-544022s >= -30000s", "-543134s >= -30000s", "-542765s >= -30000s", "-542222s >= -30000s", "-542055s >= -30000s", "-541428s >= -30000s", "-540935s >= -30000s", "-540270s >= -30000s", "-539930s >= -30000s", "-539679s >= -30000s", "-538956s >= -30000s", "-538648s >= -30000s", "-538529s >= -30000s", "-536400s >= -30000s", "-535893s >= -30000s", "-535742s >= -30000s", "-535570s >= -30000s", "-535383s >= -30000s", "-535114s >= -30000s", "-534888s >= -30000s", "-534743s >= -30000s", "-534613s >= -30000s", "-534358s >= -30000s", "-534235s >= -30000s", "-534072s >= -30000s", "-533895s >= -30000s", "-533762s >= -30000s", "-533548s >= -30000s", "-533411s >= -30000s", "-533110s >= -30000s", "-532965s >= -30000s", "-532773s >= -30000s", "-532600s >= -30000s", "-532387s >= -30000s", "-532229s >= -30000s", "-531972s >= -30000s", "-531724s >= -30000s", "-531557s >= -30000s", "-531294s >= -30000s", "-530911s >= -30000s", "-530591s >= -30000s", "-530424s >= -30000s", "-529332s >= -30000s", "-528928s >= -30000s", "-528697s >= -30000s", "-528517s >= -30000s", "-528339s >= -30000s", "-528226s >= -30000s", "-528110s >= -30000s", "-527895s >= -30000s", "-527291s >= -30000s", "-527164s >= -30000s", "-527045s >= -30000s", "-526888s >= -30000s", "-524584s >= -30000s", "-524351s >= -30000s", "-524167s >= -30000s", "-523949s >= -30000s", "-523771s >= -30000s", "-523513s >= -30000s", "-523093s >= -30000s", "-522602s >= -30000s", "-519997s >= -30000s", "-519699s >= -30000s", "-519406s >= -30000s", "-519273s >= -30000s", "-519057s >= -30000s", "-518928s >= -30000s", "-518688s >= -30000s", "-922337203685477s >= -30000s", "delay time: 922337203685477", "delay time: 599267", "delay time: 599044", "delay time: 598913", "delay time: 598739", "delay time: 598551", "delay time: 598322", "delay time: 598052", "delay time: 597847", "delay time: 597676", "delay time: 597531", "delay time: 597263", "delay time: 597082", "delay time: 596914", "delay time: 596793", "delay time: 596592", "delay time: 596455", "delay time: 595132", "delay time: 594905", "delay time: 593790", "delay time: 593625", "delay time: 593309", "delay time: 593160", "delay time: 592848", "delay time: 592694", "delay time: 592445", "delay time: 592096", "delay time: 588846", "delay time: 587547", "delay time: 587360", "delay time: 587109", "delay time: 586987", "delay time: 586866", "delay time: 586743", "delay time: 586639", "delay time: 586203", "delay time: 585929", "delay time: 585421", "delay time: 584401", "delay time: 583925", "delay time: 583716", "delay time: 583515", "delay time: 582909", "delay time: 582785", "delay time: 581490", "delay time: 581315", "delay time: 579811", "delay time: 579624", "delay time: 578832", "delay time: 578211", "delay time: 577750", "delay time: 577549", "delay time: 577394", "delay time: 577211", "delay time: 577098", "delay time: 576888", "delay time: 576508", "delay time: 576231", "delay time: 576055", "delay time: 575883", "delay time: 575685", "delay time: 575566", "delay time: 575436", "delay time: 575263", "delay time: 575122", "delay time: 574962", "delay time: 574809", "delay time: 574636", "delay time: 574420", "delay time: 574156", "delay time: 573937", "delay time: 573788", "delay time: 573603", "delay time: 573460", "delay time: 573302", "delay time: 573009", "delay time: 572879", "delay time: 572626", "delay time: 572218", "delay time: 571573", "delay time: 570506", "delay time: 570371", "delay time: 570105", "delay time: 569743", "delay time: 569022", "delay time: 568596", "delay time: 568078", "delay time: 567471", "delay time: 566569", "delay time: 566207", "delay time: 565833", "delay time: 565246", "delay time: 564858", "delay time: 564607", "delay time: 564253", "delay time: 563730", "delay time: 563109", "delay time: 562166", "delay time: 560897", "delay time: 559742", "delay time: 559473", "delay time: 559318", "delay time: 559014", "delay time: 558698", "delay time: 558370", "delay time: 558221", "delay time: 558038", "delay time: 557701", "delay time: 557358", "delay time: 556995", "delay time: 556577", "delay time: 554663", "delay time: 554267", "delay time: 553792", "delay time: 553549", "delay time: 553400", "delay time: 553051", "delay time: 552771", "delay time: 552169", "delay time: 551713", "delay time: 549571", "delay time: 548815", "delay time: 547720", "delay time: 545026", "delay time: 544313", "delay time: 544022", "delay time: 543134", "delay time: 542765", "delay time: 542222", "delay time: 542055", "delay time: 541428", "delay time: 540935", "delay time: 540270", "delay time: 539930", "delay time: 539679", "delay time: 538956", "delay time: 538648", "delay time: 538529", "delay time: 536400", "delay time: 535893", "delay time: 535742", "delay time: 535570", "delay time: 535383", "delay time: 535114", "delay time: 534888", "delay time: 534743", "delay time: 534613", "delay time: 534358", "delay time: 534235", "delay time: 534072", "delay time: 533895", "delay time: 533762", "delay time: 533548", "delay time: 533411", "delay time: 533110", "delay time: 532965", "delay time: 532773", "delay time: 532600", "delay time: 532387", "delay time: 532229", "delay time: 531972", "delay time: 531724", "delay time: 531557", "delay time: 531294", "delay time: 530911", "delay time: 530591", "delay time: 530424", "delay time: 529332", "delay time: 528928", "delay time: 528697", "delay time: 528517", "delay time: 528339", "delay time: 528226", "delay time: 528110", "delay time: 527895", "delay time: 527291", "delay time: 527164", "delay time: 527045", "delay time: 526888", "delay time: 524584", "delay time: 524351", "delay time: 524167", "delay time: 523949", "delay time: 523771", "delay time: 523513", "delay time: 523093", "delay time: 522602", "delay time: 519997", "delay time: 519699", "delay time: 519406", "delay time: 519273", "delay time: 519057", "delay time: 518928", "delay time: 518688", "1980000 memory reserve | memory write watch", "32E0000 memory reserve | memory write watch", "52E0000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "Allocates memory with a write watch (potentially for evading sandboxes)", "match_data": ["delay time: 922337203685477", "delay time: 599267", "delay time: 599044", "delay time: 598913", "delay time: 598739", "delay time: 598551", "delay time: 598322", "delay time: 598052", "delay time: 597847", "delay time: 597676", "delay time: 597531", "delay time: 597263", "delay time: 597082", "delay time: 596914", "delay time: 596793", "delay time: 596592", "delay time: 596455", "delay time: 595132", "delay time: 594905", "delay time: 593790", "delay time: 593625", "delay time: 593309", "delay time: 593160", "delay time: 592848", "delay time: 592694", "delay time: 592445", "delay time: 592096", "delay time: 588846", "delay time: 587547", "delay time: 587360", "delay time: 587109", "delay time: 586987", "delay time: 586866", "delay time: 586743", "delay time: 586639", "delay time: 586203", "delay time: 585929", "delay time: 585421", "delay time: 584401", "delay time: 583925", "delay time: 583716", "delay time: 583515", "delay time: 582909", "delay time: 582785", "delay time: 581490", "delay time: 581315", "delay time: 579811", "delay time: 579624", "delay time: 578832", "delay time: 578211", "delay time: 577750", "delay time: 577549", "delay time: 577394", "delay time: 577211", "delay time: 577098", "delay time: 576888", "delay time: 576508", "delay time: 576231", "delay time: 576055", "delay time: 575883", "delay time: 575685", "delay time: 575566", "delay time: 575436", "delay time: 575263", "delay time: 575122", "delay time: 574962", "delay time: 574809", "delay time: 574636", "delay time: 574420", "delay time: 574156", "delay time: 573937", "delay time: 573788", "delay time: 573603", "delay time: 573460", "delay time: 573302", "delay time: 573009", "delay time: 572879", "delay time: 572626", "delay time: 572218", "delay time: 571573", "delay time: 570506", "delay time: 570371", "delay time: 570105", "delay time: 569743", "delay time: 569022", "delay time: 568596", "delay time: 568078", "delay time: 567471", "delay time: 566569", "delay time: 566207", "delay time: 565833", "delay time: 565246", "delay time: 564858", "delay time: 564607", "delay time: 564253", "delay time: 563730", "delay time: 563109", "delay time: 562166", "delay time: 560897", "delay time: 559742", "delay time: 559473", "delay time: 559318", "delay time: 559014", "delay time: 558698", "delay time: 558370", "delay time: 558221", "delay time: 558038", "delay time: 557701", "delay time: 557358", "delay time: 556995", "delay time: 556577", "delay time: 554663", "delay time: 554267", "delay time: 553792", "delay time: 553549", "delay time: 553400", "delay time: 553051", "delay time: 552771", "delay time: 552169", "delay time: 551713", "delay time: 549571", "delay time: 548815", "delay time: 547720", "delay time: 545026", "delay time: 544313", "delay time: 544022", "delay time: 543134", "delay time: 542765", "delay time: 542222", "delay time: 542055", "delay time: 541428", "delay time: 540935", "delay time: 540270", "delay time: 539930", "delay time: 539679", "delay time: 538956", "delay time: 538648", "delay time: 538529", "delay time: 536400", "delay time: 535893", "delay time: 535742", "delay time: 535570", "delay time: 535383", "delay time: 535114", "delay time: 534888", "delay time: 534743", "delay time: 534613", "delay time: 534358", "delay time: 534235", "delay time: 534072", "delay time: 533895", "delay time: 533762", "delay time: 533548", "delay time: 533411", "delay time: 533110", "delay time: 532965", "delay time: 532773", "delay time: 532600", "delay time: 532387", "delay time: 532229", "delay time: 531972", "delay time: 531724", "delay time: 531557", "delay time: 531294", "delay time: 530911", "delay time: 530591", "delay time: 530424", "delay time: 529332", "delay time: 528928", "delay time: 528697", "delay time: 528517", "delay time: 528339", "delay time: 528226", "delay time: 528110", "delay time: 527895", "delay time: 527291", "delay time: 527164", "delay time: 527045", "delay time: 526888", "delay time: 524584", "delay time: 524351", "delay time: 524167", "delay time: 523949", "delay time: 523771", "delay time: 523513", "delay time: 523093", "delay time: 522602", "delay time: 519997", "delay time: 519699", "delay time: 519406", "delay time: 519273", "delay time: 519057", "delay time: 518928", "delay time: 518688", "-1844674407370954s >= -30000s", "-50000s >= -30000s", "4793 > 30", "339 > 30", "-599267s >= -30000s", "-599044s >= -30000s", "-598913s >= -30000s", "-598739s >= -30000s", "-598551s >= -30000s", "-598322s >= -30000s", "-598052s >= -30000s", "-597847s >= -30000s", "-597676s >= -30000s", "-597531s >= -30000s", "-597263s >= -30000s", "-597082s >= -30000s", "-596914s >= -30000s", "-596793s >= -30000s", "-596592s >= -30000s", "-596455s >= -30000s", "-595132s >= -30000s", "-594905s >= -30000s", "-593790s >= -30000s", "-593625s >= -30000s", "-593309s >= -30000s", "-593160s >= -30000s", "-592848s >= -30000s", "-592694s >= -30000s", "-592445s >= -30000s", "-592096s >= -30000s", "-588846s >= -30000s", "-587547s >= -30000s", "-587360s >= -30000s", "-587109s >= -30000s", "-586987s >= -30000s", "-586866s >= -30000s", "-586743s >= -30000s", "-586639s >= -30000s", "-586203s >= -30000s", "-585929s >= -30000s", "-585421s >= -30000s", "-584401s >= -30000s", "-583925s >= -30000s", "-583716s >= -30000s", "-583515s >= -30000s", "-582909s >= -30000s", "-582785s >= -30000s", "-581490s >= -30000s", "-581315s >= -30000s", "-579811s >= -30000s", "-579624s >= -30000s", "-578832s >= -30000s", "-578211s >= -30000s", "-577750s >= -30000s", "-577549s >= -30000s", "-577394s >= -30000s", "-577211s >= -30000s", "-577098s >= -30000s", "-576888s >= -30000s", "-576508s >= -30000s", "-576231s >= -30000s", "-576055s >= -30000s", "-575883s >= -30000s", "-575685s >= -30000s", "-575566s >= -30000s", "-575436s >= -30000s", "-575263s >= -30000s", "-575122s >= -30000s", "-574962s >= -30000s", "-574809s >= -30000s", "-574636s >= -30000s", "-574420s >= -30000s", "-574156s >= -30000s", "-573937s >= -30000s", "-573788s >= -30000s", "-573603s >= -30000s", "-573460s >= -30000s", "-573302s >= -30000s", "-573009s >= -30000s", "-572879s >= -30000s", "-572626s >= -30000s", "-572218s >= -30000s", "-571573s >= -30000s", "-570506s >= -30000s", "-570371s >= -30000s", "-570105s >= -30000s", "-569743s >= -30000s", "-569022s >= -30000s", "-568596s >= -30000s", "-568078s >= -30000s", "-567471s >= -30000s", "-566569s >= -30000s", "-566207s >= -30000s", "-565833s >= -30000s", "-565246s >= -30000s", "-564858s >= -30000s", "-564607s >= -30000s", "-564253s >= -30000s", "-563730s >= -30000s", "-563109s >= -30000s", "-562166s >= -30000s", "-560897s >= -30000s", "-559742s >= -30000s", "-559473s >= -30000s", "-559318s >= -30000s", "-559014s >= -30000s", "-558698s >= -30000s", "-558370s >= -30000s", "-558221s >= -30000s", "-558038s >= -30000s", "-557701s >= -30000s", "-557358s >= -30000s", "-556995s >= -30000s", "-556577s >= -30000s", "-554663s >= -30000s", "-554267s >= -30000s", "-553792s >= -30000s", "-553549s >= -30000s", "-553400s >= -30000s", "-553051s >= -30000s", "-552771s >= -30000s", "-552169s >= -30000s", "-551713s >= -30000s", "-549571s >= -30000s", "-548815s >= -30000s", "-547720s >= -30000s", "-545026s >= -30000s", "-544313s >= -30000s", "-544022s >= -30000s", "-543134s >= -30000s", "-542765s >= -30000s", "-542222s >= -30000s", "-542055s >= -30000s", "-541428s >= -30000s", "-540935s >= -30000s", "-540270s >= -30000s", "-539930s >= -30000s", "-539679s >= -30000s", "-538956s >= -30000s", "-538648s >= -30000s", "-538529s >= -30000s", "-536400s >= -30000s", "-535893s >= -30000s", "-535742s >= -30000s", "-535570s >= -30000s", "-535383s >= -30000s", "-535114s >= -30000s", "-534888s >= -30000s", "-534743s >= -30000s", "-534613s >= -30000s", "-534358s >= -30000s", "-534235s >= -30000s", "-534072s >= -30000s", "-533895s >= -30000s", "-533762s >= -30000s", "-533548s >= -30000s", "-533411s >= -30000s", "-533110s >= -30000s", "-532965s >= -30000s", "-532773s >= -30000s", "-532600s >= -30000s", "-532387s >= -30000s", "-532229s >= -30000s", "-531972s >= -30000s", "-531724s >= -30000s", "-531557s >= -30000s", "-531294s >= -30000s", "-530911s >= -30000s", "-530591s >= -30000s", "-530424s >= -30000s", "-529332s >= -30000s", "-528928s >= -30000s", "-528697s >= -30000s", "-528517s >= -30000s", "-528339s >= -30000s", "-528226s >= -30000s", "-528110s >= -30000s", "-527895s >= -30000s", "-527291s >= -30000s", "-527164s >= -30000s", "-527045s >= -30000s", "-526888s >= -30000s", "-524584s >= -30000s", "-524351s >= -30000s", "-524167s >= -30000s", "-523949s >= -30000s", "-523771s >= -30000s", "-523513s >= -30000s", "-523093s >= -30000s", "-522602s >= -30000s", "-519997s >= -30000s", "-519699s >= -30000s", "-519406s >= -30000s", "-519273s >= -30000s", "-519057s >= -30000s", "-518928s >= -30000s", "-518688s >= -30000s", "-922337203685477s >= -30000s", "delay time: 922337203685477", "delay time: 599267", "delay time: 599044", "delay time: 598913", "delay time: 598739", "delay time: 598551", "delay time: 598322", "delay time: 598052", "delay time: 597847", "delay time: 597676", "delay time: 597531", "delay time: 597263", "delay time: 597082", "delay time: 596914", "delay time: 596793", "delay time: 596592", "delay time: 596455", "delay time: 595132", "delay time: 594905", "delay time: 593790", "delay time: 593625", "delay time: 593309", "delay time: 593160", "delay time: 592848", "delay time: 592694", "delay time: 592445", "delay time: 592096", "delay time: 588846", "delay time: 587547", "delay time: 587360", "delay time: 587109", "delay time: 586987", "delay time: 586866", "delay time: 586743", "delay time: 586639", "delay time: 586203", "delay time: 585929", "delay time: 585421", "delay time: 584401", "delay time: 583925", "delay time: 583716", "delay time: 583515", "delay time: 582909", "delay time: 582785", "delay time: 581490", "delay time: 581315", "delay time: 579811", "delay time: 579624", "delay time: 578832", "delay time: 578211", "delay time: 577750", "delay time: 577549", "delay time: 577394", "delay time: 577211", "delay time: 577098", "delay time: 576888", "delay time: 576508", "delay time: 576231", "delay time: 576055", "delay time: 575883", "delay time: 575685", "delay time: 575566", "delay time: 575436", "delay time: 575263", "delay time: 575122", "delay time: 574962", "delay time: 574809", "delay time: 574636", "delay time: 574420", "delay time: 574156", "delay time: 573937", "delay time: 573788", "delay time: 573603", "delay time: 573460", "delay time: 573302", "delay time: 573009", "delay time: 572879", "delay time: 572626", "delay time: 572218", "delay time: 571573", "delay time: 570506", "delay time: 570371", "delay time: 570105", "delay time: 569743", "delay time: 569022", "delay time: 568596", "delay time: 568078", "delay time: 567471", "delay time: 566569", "delay time: 566207", "delay time: 565833", "delay time: 565246", "delay time: 564858", "delay time: 564607", "delay time: 564253", "delay time: 563730", "delay time: 563109", "delay time: 562166", "delay time: 560897", "delay time: 559742", "delay time: 559473", "delay time: 559318", "delay time: 559014", "delay time: 558698", "delay time: 558370", "delay time: 558221", "delay time: 558038", "delay time: 557701", "delay time: 557358", "delay time: 556995", "delay time: 556577", "delay time: 554663", "delay time: 554267", "delay time: 553792", "delay time: 553549", "delay time: 553400", "delay time: 553051", "delay time: 552771", "delay time: 552169", "delay time: 551713", "delay time: 549571", "delay time: 548815", "delay time: 547720", "delay time: 545026", "delay time: 544313", "delay time: 544022", "delay time: 543134", "delay time: 542765", "delay time: 542222", "delay time: 542055", "delay time: 541428", "delay time: 540935", "delay time: 540270", "delay time: 539930", "delay time: 539679", "delay time: 538956", "delay time: 538648", "delay time: 538529", "delay time: 536400", "delay time: 535893", "delay time: 535742", "delay time: 535570", "delay time: 535383", "delay time: 535114", "delay time: 534888", "delay time: 534743", "delay time: 534613", "delay time: 534358", "delay time: 534235", "delay time: 534072", "delay time: 533895", "delay time: 533762", "delay time: 533548", "delay time: 533411", "delay time: 533110", "delay time: 532965", "delay time: 532773", "delay time: 532600", "delay time: 532387", "delay time: 532229", "delay time: 531972", "delay time: 531724", "delay time: 531557", "delay time: 531294", "delay time: 530911", "delay time: 530591", "delay time: 530424", "delay time: 529332", "delay time: 528928", "delay time: 528697", "delay time: 528517", "delay time: 528339", "delay time: 528226", "delay time: 528110", "delay time: 527895", "delay time: 527291", "delay time: 527164", "delay time: 527045", "delay time: 526888", "delay time: 524584", "delay time: 524351", "delay time: 524167", "delay time: 523949", "delay time: 523771", "delay time: 523513", "delay time: 523093", "delay time: 522602", "delay time: 519997", "delay time: 519699", "delay time: 519406", "delay time: 519273", "delay time: 519057", "delay time: 518928", "delay time: 518688", "1980000 memory reserve | memory write watch", "32E0000 memory reserve | memory write watch", "52E0000 memory reserve | memory write watch"]}]}]}, {"id": "TA0007", "name": "Discovery", "link": "https://attack.mitre.org/tactics/TA0007/", "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what\u2019s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ", "techniques": [{"id": "T1497", "name": "Virtualization/Sandbox Evasion", "link": "https://attack.mitre.org/techniques/T1497/", "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.", "signatures": [{"severity": "INFO", "description": "Contains medium sleeps (>= 30s)", "match_data": ["delay time: 922337203685477", "delay time: 599267", "delay time: 599044", "delay time: 598913", "delay time: 598739", "delay time: 598551", "delay time: 598322", "delay time: 598052", "delay time: 597847", "delay time: 597676", "delay time: 597531", "delay time: 597263", "delay time: 597082", "delay time: 596914", "delay time: 596793", "delay time: 596592", "delay time: 596455", "delay time: 595132", "delay time: 594905", "delay time: 593790", "delay time: 593625", "delay time: 593309", "delay time: 593160", "delay time: 592848", "delay time: 592694", "delay time: 592445", "delay time: 592096", "delay time: 588846", "delay time: 587547", "delay time: 587360", "delay time: 587109", "delay time: 586987", "delay time: 586866", "delay time: 586743", "delay time: 586639", "delay time: 586203", "delay time: 585929", "delay time: 585421", "delay time: 584401", "delay time: 583925", "delay time: 583716", "delay time: 583515", "delay time: 582909", "delay time: 582785", "delay time: 581490", "delay time: 581315", "delay time: 579811", "delay time: 579624", "delay time: 578832", "delay time: 578211", "delay time: 577750", "delay time: 577549", "delay time: 577394", "delay time: 577211", "delay time: 577098", "delay time: 576888", "delay time: 576508", "delay time: 576231", "delay time: 576055", "delay time: 575883", "delay time: 575685", "delay time: 575566", "delay time: 575436", "delay time: 575263", "delay time: 575122", "delay time: 574962", "delay time: 574809", "delay time: 574636", "delay time: 574420", "delay time: 574156", "delay time: 573937", "delay time: 573788", "delay time: 573603", "delay time: 573460", "delay time: 573302", "delay time: 573009", "delay time: 572879", "delay time: 572626", "delay time: 572218", "delay time: 571573", "delay time: 570506", "delay time: 570371", "delay time: 570105", "delay time: 569743", "delay time: 569022", "delay time: 568596", "delay time: 568078", "delay time: 567471", "delay time: 566569", "delay time: 566207", "delay time: 565833", "delay time: 565246", "delay time: 564858", "delay time: 564607", "delay time: 564253", "delay time: 563730", "delay time: 563109", "delay time: 562166", "delay time: 560897", "delay time: 559742", "delay time: 559473", "delay time: 559318", "delay time: 559014", "delay time: 558698", "delay time: 558370", "delay time: 558221", "delay time: 558038", "delay time: 557701", "delay time: 557358", "delay time: 556995", "delay time: 556577", "delay time: 554663", "delay time: 554267", "delay time: 553792", "delay time: 553549", "delay time: 553400", "delay time: 553051", "delay time: 552771", "delay time: 552169", "delay time: 551713", "delay time: 549571", "delay time: 548815", "delay time: 547720", "delay time: 545026", "delay time: 544313", "delay time: 544022", "delay time: 543134", "delay time: 542765", "delay time: 542222", "delay time: 542055", "delay time: 541428", "delay time: 540935", "delay time: 540270", "delay time: 539930", "delay time: 539679", "delay time: 538956", "delay time: 538648", "delay time: 538529", "delay time: 536400", "delay time: 535893", "delay time: 535742", "delay time: 535570", "delay time: 535383", "delay time: 535114", "delay time: 534888", "delay time: 534743", "delay time: 534613", "delay time: 534358", "delay time: 534235", "delay time: 534072", "delay time: 533895", "delay time: 533762", "delay time: 533548", "delay time: 533411", "delay time: 533110", "delay time: 532965", "delay time: 532773", "delay time: 532600", "delay time: 532387", "delay time: 532229", "delay time: 531972", "delay time: 531724", "delay time: 531557", "delay time: 531294", "delay time: 530911", "delay time: 530591", "delay time: 530424", "delay time: 529332", "delay time: 528928", "delay time: 528697", "delay time: 528517", "delay time: 528339", "delay time: 528226", "delay time: 528110", "delay time: 527895", "delay time: 527291", "delay time: 527164", "delay time: 527045", "delay time: 526888", "delay time: 524584", "delay time: 524351", "delay time: 524167", "delay time: 523949", "delay time: 523771", "delay time: 523513", "delay time: 523093", "delay time: 522602", "delay time: 519997", "delay time: 519699", "delay time: 519406", "delay time: 519273", "delay time: 519057", "delay time: 518928", "delay time: 518688", "-1844674407370954s >= -30000s", "-50000s >= -30000s", "4793 > 30", "339 > 30", "-599267s >= -30000s", "-599044s >= -30000s", "-598913s >= -30000s", "-598739s >= -30000s", "-598551s >= -30000s", "-598322s >= -30000s", "-598052s >= -30000s", "-597847s >= -30000s", "-597676s >= -30000s", "-597531s >= -30000s", "-597263s >= -30000s", "-597082s >= -30000s", "-596914s >= -30000s", "-596793s >= -30000s", "-596592s >= -30000s", "-596455s >= -30000s", "-595132s >= -30000s", "-594905s >= -30000s", "-593790s >= -30000s", "-593625s >= -30000s", "-593309s >= -30000s", "-593160s >= -30000s", "-592848s >= -30000s", "-592694s >= -30000s", "-592445s >= -30000s", "-592096s >= -30000s", "-588846s >= -30000s", "-587547s >= -30000s", "-587360s >= -30000s", "-587109s >= -30000s", "-586987s >= -30000s", "-586866s >= -30000s", "-586743s >= -30000s", "-586639s >= -30000s", "-586203s >= -30000s", "-585929s >= -30000s", "-585421s >= -30000s", "-584401s >= -30000s", "-583925s >= -30000s", "-583716s >= -30000s", "-583515s >= -30000s", "-582909s >= -30000s", "-582785s >= -30000s", "-581490s >= -30000s", "-581315s >= -30000s", "-579811s >= -30000s", "-579624s >= -30000s", "-578832s >= -30000s", "-578211s >= -30000s", "-577750s >= -30000s", "-577549s >= -30000s", "-577394s >= -30000s", "-577211s >= -30000s", "-577098s >= -30000s", "-576888s >= -30000s", "-576508s >= -30000s", "-576231s >= -30000s", "-576055s >= -30000s", "-575883s >= -30000s", "-575685s >= -30000s", "-575566s >= -30000s", "-575436s >= -30000s", "-575263s >= -30000s", "-575122s >= -30000s", "-574962s >= -30000s", "-574809s >= -30000s", "-574636s >= -30000s", "-574420s >= -30000s", "-574156s >= -30000s", "-573937s >= -30000s", "-573788s >= -30000s", "-573603s >= -30000s", "-573460s >= -30000s", "-573302s >= -30000s", "-573009s >= -30000s", "-572879s >= -30000s", "-572626s >= -30000s", "-572218s >= -30000s", "-571573s >= -30000s", "-570506s >= -30000s", "-570371s >= -30000s", "-570105s >= -30000s", "-569743s >= -30000s", "-569022s >= -30000s", "-568596s >= -30000s", "-568078s >= -30000s", "-567471s >= -30000s", "-566569s >= -30000s", "-566207s >= -30000s", "-565833s >= -30000s", "-565246s >= -30000s", "-564858s >= -30000s", "-564607s >= -30000s", "-564253s >= -30000s", "-563730s >= -30000s", "-563109s >= -30000s", "-562166s >= -30000s", "-560897s >= -30000s", "-559742s >= -30000s", "-559473s >= -30000s", "-559318s >= -30000s", "-559014s >= -30000s", "-558698s >= -30000s", "-558370s >= -30000s", "-558221s >= -30000s", "-558038s >= -30000s", "-557701s >= -30000s", "-557358s >= -30000s", "-556995s >= -30000s", "-556577s >= -30000s", "-554663s >= -30000s", "-554267s >= -30000s", "-553792s >= -30000s", "-553549s >= -30000s", "-553400s >= -30000s", "-553051s >= -30000s", "-552771s >= -30000s", "-552169s >= -30000s", "-551713s >= -30000s", "-549571s >= -30000s", "-548815s >= -30000s", "-547720s >= -30000s", "-545026s >= -30000s", "-544313s >= -30000s", "-544022s >= -30000s", "-543134s >= -30000s", "-542765s >= -30000s", "-542222s >= -30000s", "-542055s >= -30000s", "-541428s >= -30000s", "-540935s >= -30000s", "-540270s >= -30000s", "-539930s >= -30000s", "-539679s >= -30000s", "-538956s >= -30000s", "-538648s >= -30000s", "-538529s >= -30000s", "-536400s >= -30000s", "-535893s >= -30000s", "-535742s >= -30000s", "-535570s >= -30000s", "-535383s >= -30000s", "-535114s >= -30000s", "-534888s >= -30000s", "-534743s >= -30000s", "-534613s >= -30000s", "-534358s >= -30000s", "-534235s >= -30000s", "-534072s >= -30000s", "-533895s >= -30000s", "-533762s >= -30000s", "-533548s >= -30000s", "-533411s >= -30000s", "-533110s >= -30000s", "-532965s >= -30000s", "-532773s >= -30000s", "-532600s >= -30000s", "-532387s >= -30000s", "-532229s >= -30000s", "-531972s >= -30000s", "-531724s >= -30000s", "-531557s >= -30000s", "-531294s >= -30000s", "-530911s >= -30000s", "-530591s >= -30000s", "-530424s >= -30000s", "-529332s >= -30000s", "-528928s >= -30000s", "-528697s >= -30000s", "-528517s >= -30000s", "-528339s >= -30000s", "-528226s >= -30000s", "-528110s >= -30000s", "-527895s >= -30000s", "-527291s >= -30000s", "-527164s >= -30000s", "-527045s >= -30000s", "-526888s >= -30000s", "-524584s >= -30000s", "-524351s >= -30000s", "-524167s >= -30000s", "-523949s >= -30000s", "-523771s >= -30000s", "-523513s >= -30000s", "-523093s >= -30000s", "-522602s >= -30000s", "-519997s >= -30000s", "-519699s >= -30000s", "-519406s >= -30000s", "-519273s >= -30000s", "-519057s >= -30000s", "-518928s >= -30000s", "-518688s >= -30000s", "-922337203685477s >= -30000s", "delay time: 922337203685477", "delay time: 599267", "delay time: 599044", "delay time: 598913", "delay time: 598739", "delay time: 598551", "delay time: 598322", "delay time: 598052", "delay time: 597847", "delay time: 597676", "delay time: 597531", "delay time: 597263", "delay time: 597082", "delay time: 596914", "delay time: 596793", "delay time: 596592", "delay time: 596455", "delay time: 595132", "delay time: 594905", "delay time: 593790", "delay time: 593625", "delay time: 593309", "delay time: 593160", "delay time: 592848", "delay time: 592694", "delay time: 592445", "delay time: 592096", "delay time: 588846", "delay time: 587547", "delay time: 587360", "delay time: 587109", "delay time: 586987", "delay time: 586866", "delay time: 586743", "delay time: 586639", "delay time: 586203", "delay time: 585929", "delay time: 585421", "delay time: 584401", "delay time: 583925", "delay time: 583716", "delay time: 583515", "delay time: 582909", "delay time: 582785", "delay time: 581490", "delay time: 581315", "delay time: 579811", "delay time: 579624", "delay time: 578832", "delay time: 578211", "delay time: 577750", "delay time: 577549", "delay time: 577394", "delay time: 577211", "delay time: 577098", "delay time: 576888", "delay time: 576508", "delay time: 576231", "delay time: 576055", "delay time: 575883", "delay time: 575685", "delay time: 575566", "delay time: 575436", "delay time: 575263", "delay time: 575122", "delay time: 574962", "delay time: 574809", "delay time: 574636", "delay time: 574420", "delay time: 574156", "delay time: 573937", "delay time: 573788", "delay time: 573603", "delay time: 573460", "delay time: 573302", "delay time: 573009", "delay time: 572879", "delay time: 572626", "delay time: 572218", "delay time: 571573", "delay time: 570506", "delay time: 570371", "delay time: 570105", "delay time: 569743", "delay time: 569022", "delay time: 568596", "delay time: 568078", "delay time: 567471", "delay time: 566569", "delay time: 566207", "delay time: 565833", "delay time: 565246", "delay time: 564858", "delay time: 564607", "delay time: 564253", "delay time: 563730", "delay time: 563109", "delay time: 562166", "delay time: 560897", "delay time: 559742", "delay time: 559473", "delay time: 559318", "delay time: 559014", "delay time: 558698", "delay time: 558370", "delay time: 558221", "delay time: 558038", "delay time: 557701", "delay time: 557358", "delay time: 556995", "delay time: 556577", "delay time: 554663", "delay time: 554267", "delay time: 553792", "delay time: 553549", "delay time: 553400", "delay time: 553051", "delay time: 552771", "delay time: 552169", "delay time: 551713", "delay time: 549571", "delay time: 548815", "delay time: 547720", "delay time: 545026", "delay time: 544313", "delay time: 544022", "delay time: 543134", "delay time: 542765", "delay time: 542222", "delay time: 542055", "delay time: 541428", "delay time: 540935", "delay time: 540270", "delay time: 539930", "delay time: 539679", "delay time: 538956", "delay time: 538648", "delay time: 538529", "delay time: 536400", "delay time: 535893", "delay time: 535742", "delay time: 535570", "delay time: 535383", "delay time: 535114", "delay time: 534888", "delay time: 534743", "delay time: 534613", "delay time: 534358", "delay time: 534235", "delay time: 534072", "delay time: 533895", "delay time: 533762", "delay time: 533548", "delay time: 533411", "delay time: 533110", "delay time: 532965", "delay time: 532773", "delay time: 532600", "delay time: 532387", "delay time: 532229", "delay time: 531972", "delay time: 531724", "delay time: 531557", "delay time: 531294", "delay time: 530911", "delay time: 530591", "delay time: 530424", "delay time: 529332", "delay time: 528928", "delay time: 528697", "delay time: 528517", "delay time: 528339", "delay time: 528226", "delay time: 528110", "delay time: 527895", "delay time: 527291", "delay time: 527164", "delay time: 527045", "delay time: 526888", "delay time: 524584", "delay time: 524351", "delay time: 524167", "delay time: 523949", "delay time: 523771", "delay time: 523513", "delay time: 523093", "delay time: 522602", "delay time: 519997", "delay time: 519699", "delay time: 519406", "delay time: 519273", "delay time: 519057", "delay time: 518928", "delay time: 518688", "1980000 memory reserve | memory write watch", "32E0000 memory reserve | memory write watch", "52E0000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "May sleep (evasive loops) to hinder dynamic analysis", "match_data": ["delay time: 922337203685477", "delay time: 599267", "delay time: 599044", "delay time: 598913", "delay time: 598739", "delay time: 598551", "delay time: 598322", "delay time: 598052", "delay time: 597847", "delay time: 597676", "delay time: 597531", "delay time: 597263", "delay time: 597082", "delay time: 596914", "delay time: 596793", "delay time: 596592", "delay time: 596455", "delay time: 595132", "delay time: 594905", "delay time: 593790", "delay time: 593625", "delay time: 593309", "delay time: 593160", "delay time: 592848", "delay time: 592694", "delay time: 592445", "delay time: 592096", "delay time: 588846", "delay time: 587547", "delay time: 587360", "delay time: 587109", "delay time: 586987", "delay time: 586866", "delay time: 586743", "delay time: 586639", "delay time: 586203", "delay time: 585929", "delay time: 585421", "delay time: 584401", "delay time: 583925", "delay time: 583716", "delay time: 583515", "delay time: 582909", "delay time: 582785", "delay time: 581490", "delay time: 581315", "delay time: 579811", "delay time: 579624", "delay time: 578832", "delay time: 578211", "delay time: 577750", "delay time: 577549", "delay time: 577394", "delay time: 577211", "delay time: 577098", "delay time: 576888", "delay time: 576508", "delay time: 576231", "delay time: 576055", "delay time: 575883", "delay time: 575685", "delay time: 575566", "delay time: 575436", "delay time: 575263", "delay time: 575122", "delay time: 574962", "delay time: 574809", "delay time: 574636", "delay time: 574420", "delay time: 574156", "delay time: 573937", "delay time: 573788", "delay time: 573603", "delay time: 573460", "delay time: 573302", "delay time: 573009", "delay time: 572879", "delay time: 572626", "delay time: 572218", "delay time: 571573", "delay time: 570506", "delay time: 570371", "delay time: 570105", "delay time: 569743", "delay time: 569022", "delay time: 568596", "delay time: 568078", "delay time: 567471", "delay time: 566569", "delay time: 566207", "delay time: 565833", "delay time: 565246", "delay time: 564858", "delay time: 564607", "delay time: 564253", "delay time: 563730", "delay time: 563109", "delay time: 562166", "delay time: 560897", "delay time: 559742", "delay time: 559473", "delay time: 559318", "delay time: 559014", "delay time: 558698", "delay time: 558370", "delay time: 558221", "delay time: 558038", "delay time: 557701", "delay time: 557358", "delay time: 556995", "delay time: 556577", "delay time: 554663", "delay time: 554267", "delay time: 553792", "delay time: 553549", "delay time: 553400", "delay time: 553051", "delay time: 552771", "delay time: 552169", "delay time: 551713", "delay time: 549571", "delay time: 548815", "delay time: 547720", "delay time: 545026", "delay time: 544313", "delay time: 544022", "delay time: 543134", "delay time: 542765", "delay time: 542222", "delay time: 542055", "delay time: 541428", "delay time: 540935", "delay time: 540270", "delay time: 539930", "delay time: 539679", "delay time: 538956", "delay time: 538648", "delay time: 538529", "delay time: 536400", "delay time: 535893", "delay time: 535742", "delay time: 535570", "delay time: 535383", "delay time: 535114", "delay time: 534888", "delay time: 534743", "delay time: 534613", "delay time: 534358", "delay time: 534235", "delay time: 534072", "delay time: 533895", "delay time: 533762", "delay time: 533548", "delay time: 533411", "delay time: 533110", "delay time: 532965", "delay time: 532773", "delay time: 532600", "delay time: 532387", "delay time: 532229", "delay time: 531972", "delay time: 531724", "delay time: 531557", "delay time: 531294", "delay time: 530911", "delay time: 530591", "delay time: 530424", "delay time: 529332", "delay time: 528928", "delay time: 528697", "delay time: 528517", "delay time: 528339", "delay time: 528226", "delay time: 528110", "delay time: 527895", "delay time: 527291", "delay time: 527164", "delay time: 527045", "delay time: 526888", "delay time: 524584", "delay time: 524351", "delay time: 524167", "delay time: 523949", "delay time: 523771", "delay time: 523513", "delay time: 523093", "delay time: 522602", "delay time: 519997", "delay time: 519699", "delay time: 519406", "delay time: 519273", "delay time: 519057", "delay time: 518928", "delay time: 518688", "-1844674407370954s >= -30000s", "-50000s >= -30000s", "4793 > 30", "339 > 30", "-599267s >= -30000s", "-599044s >= -30000s", "-598913s >= -30000s", "-598739s >= -30000s", "-598551s >= -30000s", "-598322s >= -30000s", "-598052s >= -30000s", "-597847s >= -30000s", "-597676s >= -30000s", "-597531s >= -30000s", "-597263s >= -30000s", "-597082s >= -30000s", "-596914s >= -30000s", "-596793s >= -30000s", "-596592s >= -30000s", "-596455s >= -30000s", "-595132s >= -30000s", "-594905s >= -30000s", "-593790s >= -30000s", "-593625s >= -30000s", "-593309s >= -30000s", "-593160s >= -30000s", "-592848s >= -30000s", "-592694s >= -30000s", "-592445s >= -30000s", "-592096s >= -30000s", "-588846s >= -30000s", "-587547s >= -30000s", "-587360s >= -30000s", "-587109s >= -30000s", "-586987s >= -30000s", "-586866s >= -30000s", "-586743s >= -30000s", "-586639s >= -30000s", "-586203s >= -30000s", "-585929s >= -30000s", "-585421s >= -30000s", "-584401s >= -30000s", "-583925s >= -30000s", "-583716s >= -30000s", "-583515s >= -30000s", "-582909s >= -30000s", "-582785s >= -30000s", "-581490s >= -30000s", "-581315s >= -30000s", "-579811s >= -30000s", "-579624s >= -30000s", "-578832s >= -30000s", "-578211s >= -30000s", "-577750s >= -30000s", "-577549s >= -30000s", "-577394s >= -30000s", "-577211s >= -30000s", "-577098s >= -30000s", "-576888s >= -30000s", "-576508s >= -30000s", "-576231s >= -30000s", "-576055s >= -30000s", "-575883s >= -30000s", "-575685s >= -30000s", "-575566s >= -30000s", "-575436s >= -30000s", "-575263s >= -30000s", "-575122s >= -30000s", "-574962s >= -30000s", "-574809s >= -30000s", "-574636s >= -30000s", "-574420s >= -30000s", "-574156s >= -30000s", "-573937s >= -30000s", "-573788s >= -30000s", "-573603s >= -30000s", "-573460s >= -30000s", "-573302s >= -30000s", "-573009s >= -30000s", "-572879s >= -30000s", "-572626s >= -30000s", "-572218s >= -30000s", "-571573s >= -30000s", "-570506s >= -30000s", "-570371s >= -30000s", "-570105s >= -30000s", "-569743s >= -30000s", "-569022s >= -30000s", "-568596s >= -30000s", "-568078s >= -30000s", "-567471s >= -30000s", "-566569s >= -30000s", "-566207s >= -30000s", "-565833s >= -30000s", "-565246s >= -30000s", "-564858s >= -30000s", "-564607s >= -30000s", "-564253s >= -30000s", "-563730s >= -30000s", "-563109s >= -30000s", "-562166s >= -30000s", "-560897s >= -30000s", "-559742s >= -30000s", "-559473s >= -30000s", "-559318s >= -30000s", "-559014s >= -30000s", "-558698s >= -30000s", "-558370s >= -30000s", "-558221s >= -30000s", "-558038s >= -30000s", "-557701s >= -30000s", "-557358s >= -30000s", "-556995s >= -30000s", "-556577s >= -30000s", "-554663s >= -30000s", "-554267s >= -30000s", "-553792s >= -30000s", "-553549s >= -30000s", "-553400s >= -30000s", "-553051s >= -30000s", "-552771s >= -30000s", "-552169s >= -30000s", "-551713s >= -30000s", "-549571s >= -30000s", "-548815s >= -30000s", "-547720s >= -30000s", "-545026s >= -30000s", "-544313s >= -30000s", "-544022s >= -30000s", "-543134s >= -30000s", "-542765s >= -30000s", "-542222s >= -30000s", "-542055s >= -30000s", "-541428s >= -30000s", "-540935s >= -30000s", "-540270s >= -30000s", "-539930s >= -30000s", "-539679s >= -30000s", "-538956s >= -30000s", "-538648s >= -30000s", "-538529s >= -30000s", "-536400s >= -30000s", "-535893s >= -30000s", "-535742s >= -30000s", "-535570s >= -30000s", "-535383s >= -30000s", "-535114s >= -30000s", "-534888s >= -30000s", "-534743s >= -30000s", "-534613s >= -30000s", "-534358s >= -30000s", "-534235s >= -30000s", "-534072s >= -30000s", "-533895s >= -30000s", "-533762s >= -30000s", "-533548s >= -30000s", "-533411s >= -30000s", "-533110s >= -30000s", "-532965s >= -30000s", "-532773s >= -30000s", "-532600s >= -30000s", "-532387s >= -30000s", "-532229s >= -30000s", "-531972s >= -30000s", "-531724s >= -30000s", "-531557s >= -30000s", "-531294s >= -30000s", "-530911s >= -30000s", "-530591s >= -30000s", "-530424s >= -30000s", "-529332s >= -30000s", "-528928s >= -30000s", "-528697s >= -30000s", "-528517s >= -30000s", "-528339s >= -30000s", "-528226s >= -30000s", "-528110s >= -30000s", "-527895s >= -30000s", "-527291s >= -30000s", "-527164s >= -30000s", "-527045s >= -30000s", "-526888s >= -30000s", "-524584s >= -30000s", "-524351s >= -30000s", "-524167s >= -30000s", "-523949s >= -30000s", "-523771s >= -30000s", "-523513s >= -30000s", "-523093s >= -30000s", "-522602s >= -30000s", "-519997s >= -30000s", "-519699s >= -30000s", "-519406s >= -30000s", "-519273s >= -30000s", "-519057s >= -30000s", "-518928s >= -30000s", "-518688s >= -30000s", "-922337203685477s >= -30000s", "delay time: 922337203685477", "delay time: 599267", "delay time: 599044", "delay time: 598913", "delay time: 598739", "delay time: 598551", "delay time: 598322", "delay time: 598052", "delay time: 597847", "delay time: 597676", "delay time: 597531", "delay time: 597263", "delay time: 597082", "delay time: 596914", "delay time: 596793", "delay time: 596592", "delay time: 596455", "delay time: 595132", "delay time: 594905", "delay time: 593790", "delay time: 593625", "delay time: 593309", "delay time: 593160", "delay time: 592848", "delay time: 592694", "delay time: 592445", "delay time: 592096", "delay time: 588846", "delay time: 587547", "delay time: 587360", "delay time: 587109", "delay time: 586987", "delay time: 586866", "delay time: 586743", "delay time: 586639", "delay time: 586203", "delay time: 585929", "delay time: 585421", "delay time: 584401", "delay time: 583925", "delay time: 583716", "delay time: 583515", "delay time: 582909", "delay time: 582785", "delay time: 581490", "delay time: 581315", "delay time: 579811", "delay time: 579624", "delay time: 578832", "delay time: 578211", "delay time: 577750", "delay time: 577549", "delay time: 577394", "delay time: 577211", "delay time: 577098", "delay time: 576888", "delay time: 576508", "delay time: 576231", "delay time: 576055", "delay time: 575883", "delay time: 575685", "delay time: 575566", "delay time: 575436", "delay time: 575263", "delay time: 575122", "delay time: 574962", "delay time: 574809", "delay time: 574636", "delay time: 574420", "delay time: 574156", "delay time: 573937", "delay time: 573788", "delay time: 573603", "delay time: 573460", "delay time: 573302", "delay time: 573009", "delay time: 572879", "delay time: 572626", "delay time: 572218", "delay time: 571573", "delay time: 570506", "delay time: 570371", "delay time: 570105", "delay time: 569743", "delay time: 569022", "delay time: 568596", "delay time: 568078", "delay time: 567471", "delay time: 566569", "delay time: 566207", "delay time: 565833", "delay time: 565246", "delay time: 564858", "delay time: 564607", "delay time: 564253", "delay time: 563730", "delay time: 563109", "delay time: 562166", "delay time: 560897", "delay time: 559742", "delay time: 559473", "delay time: 559318", "delay time: 559014", "delay time: 558698", "delay time: 558370", "delay time: 558221", "delay time: 558038", "delay time: 557701", "delay time: 557358", "delay time: 556995", "delay time: 556577", "delay time: 554663", "delay time: 554267", "delay time: 553792", "delay time: 553549", "delay time: 553400", "delay time: 553051", "delay time: 552771", "delay time: 552169", "delay time: 551713", "delay time: 549571", "delay time: 548815", "delay time: 547720", "delay time: 545026", "delay time: 544313", "delay time: 544022", "delay time: 543134", "delay time: 542765", "delay time: 542222", "delay time: 542055", "delay time: 541428", "delay time: 540935", "delay time: 540270", "delay time: 539930", "delay time: 539679", "delay time: 538956", "delay time: 538648", "delay time: 538529", "delay time: 536400", "delay time: 535893", "delay time: 535742", "delay time: 535570", "delay time: 535383", "delay time: 535114", "delay time: 534888", "delay time: 534743", "delay time: 534613", "delay time: 534358", "delay time: 534235", "delay time: 534072", "delay time: 533895", "delay time: 533762", "delay time: 533548", "delay time: 533411", "delay time: 533110", "delay time: 532965", "delay time: 532773", "delay time: 532600", "delay time: 532387", "delay time: 532229", "delay time: 531972", "delay time: 531724", "delay time: 531557", "delay time: 531294", "delay time: 530911", "delay time: 530591", "delay time: 530424", "delay time: 529332", "delay time: 528928", "delay time: 528697", "delay time: 528517", "delay time: 528339", "delay time: 528226", "delay time: 528110", "delay time: 527895", "delay time: 527291", "delay time: 527164", "delay time: 527045", "delay time: 526888", "delay time: 524584", "delay time: 524351", "delay time: 524167", "delay time: 523949", "delay time: 523771", "delay time: 523513", "delay time: 523093", "delay time: 522602", "delay time: 519997", "delay time: 519699", "delay time: 519406", "delay time: 519273", "delay time: 519057", "delay time: 518928", "delay time: 518688", "1980000 memory reserve | memory write watch", "32E0000 memory reserve | memory write watch", "52E0000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "Contains long sleeps (>= 3 min)", "match_data": ["delay time: 922337203685477", "delay time: 599267", "delay time: 599044", "delay time: 598913", "delay time: 598739", "delay time: 598551", "delay time: 598322", "delay time: 598052", "delay time: 597847", "delay time: 597676", "delay time: 597531", "delay time: 597263", "delay time: 597082", "delay time: 596914", "delay time: 596793", "delay time: 596592", "delay time: 596455", "delay time: 595132", "delay time: 594905", "delay time: 593790", "delay time: 593625", "delay time: 593309", "delay time: 593160", "delay time: 592848", "delay time: 592694", "delay time: 592445", "delay time: 592096", "delay time: 588846", "delay time: 587547", "delay time: 587360", "delay time: 587109", "delay time: 586987", "delay time: 586866", "delay time: 586743", "delay time: 586639", "delay time: 586203", "delay time: 585929", "delay time: 585421", "delay time: 584401", "delay time: 583925", "delay time: 583716", "delay time: 583515", "delay time: 582909", "delay time: 582785", "delay time: 581490", "delay time: 581315", "delay time: 579811", "delay time: 579624", "delay time: 578832", "delay time: 578211", "delay time: 577750", "delay time: 577549", "delay time: 577394", "delay time: 577211", "delay time: 577098", "delay time: 576888", "delay time: 576508", "delay time: 576231", "delay time: 576055", "delay time: 575883", "delay time: 575685", "delay time: 575566", "delay time: 575436", "delay time: 575263", "delay time: 575122", "delay time: 574962", "delay time: 574809", "delay time: 574636", "delay time: 574420", "delay time: 574156", "delay time: 573937", "delay time: 573788", "delay time: 573603", "delay time: 573460", "delay time: 573302", "delay time: 573009", "delay time: 572879", "delay time: 572626", "delay time: 572218", "delay time: 571573", "delay time: 570506", "delay time: 570371", "delay time: 570105", "delay time: 569743", "delay time: 569022", "delay time: 568596", "delay time: 568078", "delay time: 567471", "delay time: 566569", "delay time: 566207", "delay time: 565833", "delay time: 565246", "delay time: 564858", "delay time: 564607", "delay time: 564253", "delay time: 563730", "delay time: 563109", "delay time: 562166", "delay time: 560897", "delay time: 559742", "delay time: 559473", "delay time: 559318", "delay time: 559014", "delay time: 558698", "delay time: 558370", "delay time: 558221", "delay time: 558038", "delay time: 557701", "delay time: 557358", "delay time: 556995", "delay time: 556577", "delay time: 554663", "delay time: 554267", "delay time: 553792", "delay time: 553549", "delay time: 553400", "delay time: 553051", "delay time: 552771", "delay time: 552169", "delay time: 551713", "delay time: 549571", "delay time: 548815", "delay time: 547720", "delay time: 545026", "delay time: 544313", "delay time: 544022", "delay time: 543134", "delay time: 542765", "delay time: 542222", "delay time: 542055", "delay time: 541428", "delay time: 540935", "delay time: 540270", "delay time: 539930", "delay time: 539679", "delay time: 538956", "delay time: 538648", "delay time: 538529", "delay time: 536400", "delay time: 535893", "delay time: 535742", "delay time: 535570", "delay time: 535383", "delay time: 535114", "delay time: 534888", "delay time: 534743", "delay time: 534613", "delay time: 534358", "delay time: 534235", "delay time: 534072", "delay time: 533895", "delay time: 533762", "delay time: 533548", "delay time: 533411", "delay time: 533110", "delay time: 532965", "delay time: 532773", "delay time: 532600", "delay time: 532387", "delay time: 532229", "delay time: 531972", "delay time: 531724", "delay time: 531557", "delay time: 531294", "delay time: 530911", "delay time: 530591", "delay time: 530424", "delay time: 529332", "delay time: 528928", "delay time: 528697", "delay time: 528517", "delay time: 528339", "delay time: 528226", "delay time: 528110", "delay time: 527895", "delay time: 527291", "delay time: 527164", "delay time: 527045", "delay time: 526888", "delay time: 524584", "delay time: 524351", "delay time: 524167", "delay time: 523949", "delay time: 523771", "delay time: 523513", "delay time: 523093", "delay time: 522602", "delay time: 519997", "delay time: 519699", "delay time: 519406", "delay time: 519273", "delay time: 519057", "delay time: 518928", "delay time: 518688", "-1844674407370954s >= -30000s", "-50000s >= -30000s", "4793 > 30", "339 > 30", "-599267s >= -30000s", "-599044s >= -30000s", "-598913s >= -30000s", "-598739s >= -30000s", "-598551s >= -30000s", "-598322s >= -30000s", "-598052s >= -30000s", "-597847s >= -30000s", "-597676s >= -30000s", "-597531s >= -30000s", "-597263s >= -30000s", "-597082s >= -30000s", "-596914s >= -30000s", "-596793s >= -30000s", "-596592s >= -30000s", "-596455s >= -30000s", "-595132s >= -30000s", "-594905s >= -30000s", "-593790s >= -30000s", "-593625s >= -30000s", "-593309s >= -30000s", "-593160s >= -30000s", "-592848s >= -30000s", "-592694s >= -30000s", "-592445s >= -30000s", "-592096s >= -30000s", "-588846s >= -30000s", "-587547s >= -30000s", "-587360s >= -30000s", "-587109s >= -30000s", "-586987s >= -30000s", "-586866s >= -30000s", "-586743s >= -30000s", "-586639s >= -30000s", "-586203s >= -30000s", "-585929s >= -30000s", "-585421s >= -30000s", "-584401s >= -30000s", "-583925s >= -30000s", "-583716s >= -30000s", "-583515s >= -30000s", "-582909s >= -30000s", "-582785s >= -30000s", "-581490s >= -30000s", "-581315s >= -30000s", "-579811s >= -30000s", "-579624s >= -30000s", "-578832s >= -30000s", "-578211s >= -30000s", "-577750s >= -30000s", "-577549s >= -30000s", "-577394s >= -30000s", "-577211s >= -30000s", "-577098s >= -30000s", "-576888s >= -30000s", "-576508s >= -30000s", "-576231s >= -30000s", "-576055s >= -30000s", "-575883s >= -30000s", "-575685s >= -30000s", "-575566s >= -30000s", "-575436s >= -30000s", "-575263s >= -30000s", "-575122s >= -30000s", "-574962s >= -30000s", "-574809s >= -30000s", "-574636s >= -30000s", "-574420s >= -30000s", "-574156s >= -30000s", "-573937s >= -30000s", "-573788s >= -30000s", "-573603s >= -30000s", "-573460s >= -30000s", "-573302s >= -30000s", "-573009s >= -30000s", "-572879s >= -30000s", "-572626s >= -30000s", "-572218s >= -30000s", "-571573s >= -30000s", "-570506s >= -30000s", "-570371s >= -30000s", "-570105s >= -30000s", "-569743s >= -30000s", "-569022s >= -30000s", "-568596s >= -30000s", "-568078s >= -30000s", "-567471s >= -30000s", "-566569s >= -30000s", "-566207s >= -30000s", "-565833s >= -30000s", "-565246s >= -30000s", "-564858s >= -30000s", "-564607s >= -30000s", "-564253s >= -30000s", "-563730s >= -30000s", "-563109s >= -30000s", "-562166s >= -30000s", "-560897s >= -30000s", "-559742s >= -30000s", "-559473s >= -30000s", "-559318s >= -30000s", "-559014s >= -30000s", "-558698s >= -30000s", "-558370s >= -30000s", "-558221s >= -30000s", "-558038s >= -30000s", "-557701s >= -30000s", "-557358s >= -30000s", "-556995s >= -30000s", "-556577s >= -30000s", "-554663s >= -30000s", "-554267s >= -30000s", "-553792s >= -30000s", "-553549s >= -30000s", "-553400s >= -30000s", "-553051s >= -30000s", "-552771s >= -30000s", "-552169s >= -30000s", "-551713s >= -30000s", "-549571s >= -30000s", "-548815s >= -30000s", "-547720s >= -30000s", "-545026s >= -30000s", "-544313s >= -30000s", "-544022s >= -30000s", "-543134s >= -30000s", "-542765s >= -30000s", "-542222s >= -30000s", "-542055s >= -30000s", "-541428s >= -30000s", "-540935s >= -30000s", "-540270s >= -30000s", "-539930s >= -30000s", "-539679s >= -30000s", "-538956s >= -30000s", "-538648s >= -30000s", "-538529s >= -30000s", "-536400s >= -30000s", "-535893s >= -30000s", "-535742s >= -30000s", "-535570s >= -30000s", "-535383s >= -30000s", "-535114s >= -30000s", "-534888s >= -30000s", "-534743s >= -30000s", "-534613s >= -30000s", "-534358s >= -30000s", "-534235s >= -30000s", "-534072s >= -30000s", "-533895s >= -30000s", "-533762s >= -30000s", "-533548s >= -30000s", "-533411s >= -30000s", "-533110s >= -30000s", "-532965s >= -30000s", "-532773s >= -30000s", "-532600s >= -30000s", "-532387s >= -30000s", "-532229s >= -30000s", "-531972s >= -30000s", "-531724s >= -30000s", "-531557s >= -30000s", "-531294s >= -30000s", "-530911s >= -30000s", "-530591s >= -30000s", "-530424s >= -30000s", "-529332s >= -30000s", "-528928s >= -30000s", "-528697s >= -30000s", "-528517s >= -30000s", "-528339s >= -30000s", "-528226s >= -30000s", "-528110s >= -30000s", "-527895s >= -30000s", "-527291s >= -30000s", "-527164s >= -30000s", "-527045s >= -30000s", "-526888s >= -30000s", "-524584s >= -30000s", "-524351s >= -30000s", "-524167s >= -30000s", "-523949s >= -30000s", "-523771s >= -30000s", "-523513s >= -30000s", "-523093s >= -30000s", "-522602s >= -30000s", "-519997s >= -30000s", "-519699s >= -30000s", "-519406s >= -30000s", "-519273s >= -30000s", "-519057s >= -30000s", "-518928s >= -30000s", "-518688s >= -30000s", "-922337203685477s >= -30000s", "delay time: 922337203685477", "delay time: 599267", "delay time: 599044", "delay time: 598913", "delay time: 598739", "delay time: 598551", "delay time: 598322", "delay time: 598052", "delay time: 597847", "delay time: 597676", "delay time: 597531", "delay time: 597263", "delay time: 597082", "delay time: 596914", "delay time: 596793", "delay time: 596592", "delay time: 596455", "delay time: 595132", "delay time: 594905", "delay time: 593790", "delay time: 593625", "delay time: 593309", "delay time: 593160", "delay time: 592848", "delay time: 592694", "delay time: 592445", "delay time: 592096", "delay time: 588846", "delay time: 587547", "delay time: 587360", "delay time: 587109", "delay time: 586987", "delay time: 586866", "delay time: 586743", "delay time: 586639", "delay time: 586203", "delay time: 585929", "delay time: 585421", "delay time: 584401", "delay time: 583925", "delay time: 583716", "delay time: 583515", "delay time: 582909", "delay time: 582785", "delay time: 581490", "delay time: 581315", "delay time: 579811", "delay time: 579624", "delay time: 578832", "delay time: 578211", "delay time: 577750", "delay time: 577549", "delay time: 577394", "delay time: 577211", "delay time: 577098", "delay time: 576888", "delay time: 576508", "delay time: 576231", "delay time: 576055", "delay time: 575883", "delay time: 575685", "delay time: 575566", "delay time: 575436", "delay time: 575263", "delay time: 575122", "delay time: 574962", "delay time: 574809", "delay time: 574636", "delay time: 574420", "delay time: 574156", "delay time: 573937", "delay time: 573788", "delay time: 573603", "delay time: 573460", "delay time: 573302", "delay time: 573009", "delay time: 572879", "delay time: 572626", "delay time: 572218", "delay time: 571573", "delay time: 570506", "delay time: 570371", "delay time: 570105", "delay time: 569743", "delay time: 569022", "delay time: 568596", "delay time: 568078", "delay time: 567471", "delay time: 566569", "delay time: 566207", "delay time: 565833", "delay time: 565246", "delay time: 564858", "delay time: 564607", "delay time: 564253", "delay time: 563730", "delay time: 563109", "delay time: 562166", "delay time: 560897", "delay time: 559742", "delay time: 559473", "delay time: 559318", "delay time: 559014", "delay time: 558698", "delay time: 558370", "delay time: 558221", "delay time: 558038", "delay time: 557701", "delay time: 557358", "delay time: 556995", "delay time: 556577", "delay time: 554663", "delay time: 554267", "delay time: 553792", "delay time: 553549", "delay time: 553400", "delay time: 553051", "delay time: 552771", "delay time: 552169", "delay time: 551713", "delay time: 549571", "delay time: 548815", "delay time: 547720", "delay time: 545026", "delay time: 544313", "delay time: 544022", "delay time: 543134", "delay time: 542765", "delay time: 542222", "delay time: 542055", "delay time: 541428", "delay time: 540935", "delay time: 540270", "delay time: 539930", "delay time: 539679", "delay time: 538956", "delay time: 538648", "delay time: 538529", "delay time: 536400", "delay time: 535893", "delay time: 535742", "delay time: 535570", "delay time: 535383", "delay time: 535114", "delay time: 534888", "delay time: 534743", "delay time: 534613", "delay time: 534358", "delay time: 534235", "delay time: 534072", "delay time: 533895", "delay time: 533762", "delay time: 533548", "delay time: 533411", "delay time: 533110", "delay time: 532965", "delay time: 532773", "delay time: 532600", "delay time: 532387", "delay time: 532229", "delay time: 531972", "delay time: 531724", "delay time: 531557", "delay time: 531294", "delay time: 530911", "delay time: 530591", "delay time: 530424", "delay time: 529332", "delay time: 528928", "delay time: 528697", "delay time: 528517", "delay time: 528339", "delay time: 528226", "delay time: 528110", "delay time: 527895", "delay time: 527291", "delay time: 527164", "delay time: 527045", "delay time: 526888", "delay time: 524584", "delay time: 524351", "delay time: 524167", "delay time: 523949", "delay time: 523771", "delay time: 523513", "delay time: 523093", "delay time: 522602", "delay time: 519997", "delay time: 519699", "delay time: 519406", "delay time: 519273", "delay time: 519057", "delay time: 518928", "delay time: 518688", "1980000 memory reserve | memory write watch", "32E0000 memory reserve | memory write watch", "52E0000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "Allocates memory with a write watch (potentially for evading sandboxes)", "match_data": ["delay time: 922337203685477", "delay time: 599267", "delay time: 599044", "delay time: 598913", "delay time: 598739", "delay time: 598551", "delay time: 598322", "delay time: 598052", "delay time: 597847", "delay time: 597676", "delay time: 597531", "delay time: 597263", "delay time: 597082", "delay time: 596914", "delay time: 596793", "delay time: 596592", "delay time: 596455", "delay time: 595132", "delay time: 594905", "delay time: 593790", "delay time: 593625", "delay time: 593309", "delay time: 593160", "delay time: 592848", "delay time: 592694", "delay time: 592445", "delay time: 592096", "delay time: 588846", "delay time: 587547", "delay time: 587360", "delay time: 587109", "delay time: 586987", "delay time: 586866", "delay time: 586743", "delay time: 586639", "delay time: 586203", "delay time: 585929", "delay time: 585421", "delay time: 584401", "delay time: 583925", "delay time: 583716", "delay time: 583515", "delay time: 582909", "delay time: 582785", "delay time: 581490", "delay time: 581315", "delay time: 579811", "delay time: 579624", "delay time: 578832", "delay time: 578211", "delay time: 577750", "delay time: 577549", "delay time: 577394", "delay time: 577211", "delay time: 577098", "delay time: 576888", "delay time: 576508", "delay time: 576231", "delay time: 576055", "delay time: 575883", "delay time: 575685", "delay time: 575566", "delay time: 575436", "delay time: 575263", "delay time: 575122", "delay time: 574962", "delay time: 574809", "delay time: 574636", "delay time: 574420", "delay time: 574156", "delay time: 573937", "delay time: 573788", "delay time: 573603", "delay time: 573460", "delay time: 573302", "delay time: 573009", "delay time: 572879", "delay time: 572626", "delay time: 572218", "delay time: 571573", "delay time: 570506", "delay time: 570371", "delay time: 570105", "delay time: 569743", "delay time: 569022", "delay time: 568596", "delay time: 568078", "delay time: 567471", "delay time: 566569", "delay time: 566207", "delay time: 565833", "delay time: 565246", "delay time: 564858", "delay time: 564607", "delay time: 564253", "delay time: 563730", "delay time: 563109", "delay time: 562166", "delay time: 560897", "delay time: 559742", "delay time: 559473", "delay time: 559318", "delay time: 559014", "delay time: 558698", "delay time: 558370", "delay time: 558221", "delay time: 558038", "delay time: 557701", "delay time: 557358", "delay time: 556995", "delay time: 556577", "delay time: 554663", "delay time: 554267", "delay time: 553792", "delay time: 553549", "delay time: 553400", "delay time: 553051", "delay time: 552771", "delay time: 552169", "delay time: 551713", "delay time: 549571", "delay time: 548815", "delay time: 547720", "delay time: 545026", "delay time: 544313", "delay time: 544022", "delay time: 543134", "delay time: 542765", "delay time: 542222", "delay time: 542055", "delay time: 541428", "delay time: 540935", "delay time: 540270", "delay time: 539930", "delay time: 539679", "delay time: 538956", "delay time: 538648", "delay time: 538529", "delay time: 536400", "delay time: 535893", "delay time: 535742", "delay time: 535570", "delay time: 535383", "delay time: 535114", "delay time: 534888", "delay time: 534743", "delay time: 534613", "delay time: 534358", "delay time: 534235", "delay time: 534072", "delay time: 533895", "delay time: 533762", "delay time: 533548", "delay time: 533411", "delay time: 533110", "delay time: 532965", "delay time: 532773", "delay time: 532600", "delay time: 532387", "delay time: 532229", "delay time: 531972", "delay time: 531724", "delay time: 531557", "delay time: 531294", "delay time: 530911", "delay time: 530591", "delay time: 530424", "delay time: 529332", "delay time: 528928", "delay time: 528697", "delay time: 528517", "delay time: 528339", "delay time: 528226", "delay time: 528110", "delay time: 527895", "delay time: 527291", "delay time: 527164", "delay time: 527045", "delay time: 526888", "delay time: 524584", "delay time: 524351", "delay time: 524167", "delay time: 523949", "delay time: 523771", "delay time: 523513", "delay time: 523093", "delay time: 522602", "delay time: 519997", "delay time: 519699", "delay time: 519406", "delay time: 519273", "delay time: 519057", "delay time: 518928", "delay time: 518688", "-1844674407370954s >= -30000s", "-50000s >= -30000s", "4793 > 30", "339 > 30", "-599267s >= -30000s", "-599044s >= -30000s", "-598913s >= -30000s", "-598739s >= -30000s", "-598551s >= -30000s", "-598322s >= -30000s", "-598052s >= -30000s", "-597847s >= -30000s", "-597676s >= -30000s", "-597531s >= -30000s", "-597263s >= -30000s", "-597082s >= -30000s", "-596914s >= -30000s", "-596793s >= -30000s", "-596592s >= -30000s", "-596455s >= -30000s", "-595132s >= -30000s", "-594905s >= -30000s", "-593790s >= -30000s", "-593625s >= -30000s", "-593309s >= -30000s", "-593160s >= -30000s", "-592848s >= -30000s", "-592694s >= -30000s", "-592445s >= -30000s", "-592096s >= -30000s", "-588846s >= -30000s", "-587547s >= -30000s", "-587360s >= -30000s", "-587109s >= -30000s", "-586987s >= -30000s", "-586866s >= -30000s", "-586743s >= -30000s", "-586639s >= -30000s", "-586203s >= -30000s", "-585929s >= -30000s", "-585421s >= -30000s", "-584401s >= -30000s", "-583925s >= -30000s", "-583716s >= -30000s", "-583515s >= -30000s", "-582909s >= -30000s", "-582785s >= -30000s", "-581490s >= -30000s", "-581315s >= -30000s", "-579811s >= -30000s", "-579624s >= -30000s", "-578832s >= -30000s", "-578211s >= -30000s", "-577750s >= -30000s", "-577549s >= -30000s", "-577394s >= -30000s", "-577211s >= -30000s", "-577098s >= -30000s", "-576888s >= -30000s", "-576508s >= -30000s", "-576231s >= -30000s", "-576055s >= -30000s", "-575883s >= -30000s", "-575685s >= -30000s", "-575566s >= -30000s", "-575436s >= -30000s", "-575263s >= -30000s", "-575122s >= -30000s", "-574962s >= -30000s", "-574809s >= -30000s", "-574636s >= -30000s", "-574420s >= -30000s", "-574156s >= -30000s", "-573937s >= -30000s", "-573788s >= -30000s", "-573603s >= -30000s", "-573460s >= -30000s", "-573302s >= -30000s", "-573009s >= -30000s", "-572879s >= -30000s", "-572626s >= -30000s", "-572218s >= -30000s", "-571573s >= -30000s", "-570506s >= -30000s", "-570371s >= -30000s", "-570105s >= -30000s", "-569743s >= -30000s", "-569022s >= -30000s", "-568596s >= -30000s", "-568078s >= -30000s", "-567471s >= -30000s", "-566569s >= -30000s", "-566207s >= -30000s", "-565833s >= -30000s", "-565246s >= -30000s", "-564858s >= -30000s", "-564607s >= -30000s", "-564253s >= -30000s", "-563730s >= -30000s", "-563109s >= -30000s", "-562166s >= -30000s", "-560897s >= -30000s", "-559742s >= -30000s", "-559473s >= -30000s", "-559318s >= -30000s", "-559014s >= -30000s", "-558698s >= -30000s", "-558370s >= -30000s", "-558221s >= -30000s", "-558038s >= -30000s", "-557701s >= -30000s", "-557358s >= -30000s", "-556995s >= -30000s", "-556577s >= -30000s", "-554663s >= -30000s", "-554267s >= -30000s", "-553792s >= -30000s", "-553549s >= -30000s", "-553400s >= -30000s", "-553051s >= -30000s", "-552771s >= -30000s", "-552169s >= -30000s", "-551713s >= -30000s", "-549571s >= -30000s", "-548815s >= -30000s", "-547720s >= -30000s", "-545026s >= -30000s", "-544313s >= -30000s", "-544022s >= -30000s", "-543134s >= -30000s", "-542765s >= -30000s", "-542222s >= -30000s", "-542055s >= -30000s", "-541428s >= -30000s", "-540935s >= -30000s", "-540270s >= -30000s", "-539930s >= -30000s", "-539679s >= -30000s", "-538956s >= -30000s", "-538648s >= -30000s", "-538529s >= -30000s", "-536400s >= -30000s", "-535893s >= -30000s", "-535742s >= -30000s", "-535570s >= -30000s", "-535383s >= -30000s", "-535114s >= -30000s", "-534888s >= -30000s", "-534743s >= -30000s", "-534613s >= -30000s", "-534358s >= -30000s", "-534235s >= -30000s", "-534072s >= -30000s", "-533895s >= -30000s", "-533762s >= -30000s", "-533548s >= -30000s", "-533411s >= -30000s", "-533110s >= -30000s", "-532965s >= -30000s", "-532773s >= -30000s", "-532600s >= -30000s", "-532387s >= -30000s", "-532229s >= -30000s", "-531972s >= -30000s", "-531724s >= -30000s", "-531557s >= -30000s", "-531294s >= -30000s", "-530911s >= -30000s", "-530591s >= -30000s", "-530424s >= -30000s", "-529332s >= -30000s", "-528928s >= -30000s", "-528697s >= -30000s", "-528517s >= -30000s", "-528339s >= -30000s", "-528226s >= -30000s", "-528110s >= -30000s", "-527895s >= -30000s", "-527291s >= -30000s", "-527164s >= -30000s", "-527045s >= -30000s", "-526888s >= -30000s", "-524584s >= -30000s", "-524351s >= -30000s", "-524167s >= -30000s", "-523949s >= -30000s", "-523771s >= -30000s", "-523513s >= -30000s", "-523093s >= -30000s", "-522602s >= -30000s", "-519997s >= -30000s", "-519699s >= -30000s", "-519406s >= -30000s", "-519273s >= -30000s", "-519057s >= -30000s", "-518928s >= -30000s", "-518688s >= -30000s", "-922337203685477s >= -30000s", "delay time: 922337203685477", "delay time: 599267", "delay time: 599044", "delay time: 598913", "delay time: 598739", "delay time: 598551", "delay time: 598322", "delay time: 598052", "delay time: 597847", "delay time: 597676", "delay time: 597531", "delay time: 597263", "delay time: 597082", "delay time: 596914", "delay time: 596793", "delay time: 596592", "delay time: 596455", "delay time: 595132", "delay time: 594905", "delay time: 593790", "delay time: 593625", "delay time: 593309", "delay time: 593160", "delay time: 592848", "delay time: 592694", "delay time: 592445", "delay time: 592096", "delay time: 588846", "delay time: 587547", "delay time: 587360", "delay time: 587109", "delay time: 586987", "delay time: 586866", "delay time: 586743", "delay time: 586639", "delay time: 586203", "delay time: 585929", "delay time: 585421", "delay time: 584401", "delay time: 583925", "delay time: 583716", "delay time: 583515", "delay time: 582909", "delay time: 582785", "delay time: 581490", "delay time: 581315", "delay time: 579811", "delay time: 579624", "delay time: 578832", "delay time: 578211", "delay time: 577750", "delay time: 577549", "delay time: 577394", "delay time: 577211", "delay time: 577098", "delay time: 576888", "delay time: 576508", "delay time: 576231", "delay time: 576055", "delay time: 575883", "delay time: 575685", "delay time: 575566", "delay time: 575436", "delay time: 575263", "delay time: 575122", "delay time: 574962", "delay time: 574809", "delay time: 574636", "delay time: 574420", "delay time: 574156", "delay time: 573937", "delay time: 573788", "delay time: 573603", "delay time: 573460", "delay time: 573302", "delay time: 573009", "delay time: 572879", "delay time: 572626", "delay time: 572218", "delay time: 571573", "delay time: 570506", "delay time: 570371", "delay time: 570105", "delay time: 569743", "delay time: 569022", "delay time: 568596", "delay time: 568078", "delay time: 567471", "delay time: 566569", "delay time: 566207", "delay time: 565833", "delay time: 565246", "delay time: 564858", "delay time: 564607", "delay time: 564253", "delay time: 563730", "delay time: 563109", "delay time: 562166", "delay time: 560897", "delay time: 559742", "delay time: 559473", "delay time: 559318", "delay time: 559014", "delay time: 558698", "delay time: 558370", "delay time: 558221", "delay time: 558038", "delay time: 557701", "delay time: 557358", "delay time: 556995", "delay time: 556577", "delay time: 554663", "delay time: 554267", "delay time: 553792", "delay time: 553549", "delay time: 553400", "delay time: 553051", "delay time: 552771", "delay time: 552169", "delay time: 551713", "delay time: 549571", "delay time: 548815", "delay time: 547720", "delay time: 545026", "delay time: 544313", "delay time: 544022", "delay time: 543134", "delay time: 542765", "delay time: 542222", "delay time: 542055", "delay time: 541428", "delay time: 540935", "delay time: 540270", "delay time: 539930", "delay time: 539679", "delay time: 538956", "delay time: 538648", "delay time: 538529", "delay time: 536400", "delay time: 535893", "delay time: 535742", "delay time: 535570", "delay time: 535383", "delay time: 535114", "delay time: 534888", "delay time: 534743", "delay time: 534613", "delay time: 534358", "delay time: 534235", "delay time: 534072", "delay time: 533895", "delay time: 533762", "delay time: 533548", "delay time: 533411", "delay time: 533110", "delay time: 532965", "delay time: 532773", "delay time: 532600", "delay time: 532387", "delay time: 532229", "delay time: 531972", "delay time: 531724", "delay time: 531557", "delay time: 531294", "delay time: 530911", "delay time: 530591", "delay time: 530424", "delay time: 529332", "delay time: 528928", "delay time: 528697", "delay time: 528517", "delay time: 528339", "delay time: 528226", "delay time: 528110", "delay time: 527895", "delay time: 527291", "delay time: 527164", "delay time: 527045", "delay time: 526888", "delay time: 524584", "delay time: 524351", "delay time: 524167", "delay time: 523949", "delay time: 523771", "delay time: 523513", "delay time: 523093", "delay time: 522602", "delay time: 519997", "delay time: 519699", "delay time: 519406", "delay time: 519273", "delay time: 519057", "delay time: 518928", "delay time: 518688", "1980000 memory reserve | memory write watch", "32E0000 memory reserve | memory write watch", "52E0000 memory reserve | memory write watch"]}]}, {"id": "T1518", "name": "Software Discovery", "link": "https://attack.mitre.org/techniques/T1518/", "description": "Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nSuch software may be deployed widely across the environment for configuration management or security reasons, such as Software Deployment Tools, and may allow adversaries broad access to infect devices or move laterally.\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to Exploitation for Privilege Escalation."}, {"id": "T1518.001", "name": "Security Software Discovery", "link": "https://attack.mitre.org/techniques/T1518/001/", "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as cloud monitoring agents and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize the Cloud API to discover cloud-native security software installed on compute infrastructure, such as the AWS CloudWatch agent, Azure VM Agent, and Google Cloud Monitor agent. These agents  may collect  metrics and logs from the VM, which may be centrally aggregated in a cloud-based monitoring platform.", "signatures": [{"severity": "INFO", "description": "May try to detect the virtual machine to hinder analysis (VM artifact strings found in memory)", "match_data": ["Hyper-V RAW%SystemRoot%\\system32\\mswsock.dllW\\qc\""]}]}, {"id": "T1010", "name": "Application Window Discovery", "link": "https://attack.mitre.org/techniques/T1010/", "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used. For example, information about application windows could be used identify potential data to collect as well as identifying security tooling (Security Software Discovery) to evade.\nAdversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as Command and Scripting Interpreter commands and Native API functions.", "signatures": [{"severity": "INFO", "description": "Sample monitors Window changes (e.g. starting applications), analyze the sample with the simulation cookbook"}]}, {"id": "T1083", "name": "File and Directory Discovery", "link": "https://attack.mitre.org/techniques/T1083/", "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).\nSome files and directories may require elevated or specific user permissions to access.", "signatures": [{"severity": "INFO", "description": "Reads ini files", "match_data": ["C:\\Users\\user\\Desktop\\desktop.ini"]}]}, {"id": "T1082", "name": "System Information Discovery", "link": "https://attack.mitre.org/techniques/T1082/", "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). On ESXi servers, threat actors may gather system information from various esxcli utilities, such as system hostname get, system version get, and storage filesystem list (to list storage volumes).\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.\nSystem Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment. ", "signatures": [{"severity": "INFO", "description": "Queries the cryptographic machine GUID", "match_data": ["HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography MachineGuid", "HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers", "C:\\Users\\user\\Desktop\\software.exe VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Windows.Forms\\v4.0_4.0.0.0__b77a5c561934e089\\System.Windows.Forms.dll VolumeInformation"]}, {"severity": "INFO", "description": "Reads software policies", "match_data": ["HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography MachineGuid", "HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers", "C:\\Users\\user\\Desktop\\software.exe VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Windows.Forms\\v4.0_4.0.0.0__b77a5c561934e089\\System.Windows.Forms.dll VolumeInformation"]}, {"severity": "INFO", "description": "Queries the volume information (name, serial number etc) of a device", "match_data": ["HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography MachineGuid", "HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers", "C:\\Users\\user\\Desktop\\software.exe VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Windows.Forms\\v4.0_4.0.0.0__b77a5c561934e089\\System.Windows.Forms.dll VolumeInformation"]}]}]}, {"id": "TA0011", "name": "Command and Control", "link": "https://attack.mitre.org/tactics/TA0011/", "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim\u2019s network structure and defenses.", "techniques": [{"id": "T1573", "name": "Encrypted Channel", "link": "https://attack.mitre.org/techniques/T1573/", "description": "Adversaries may employ an encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "signatures": [{"severity": "INFO", "description": "Uses HTTPS", "match_data": ["HTTP traffic on port 443 -> 49732", "HTTP traffic on port 443 -> 49730", "HTTP traffic on port 49732 -> 443", "HTTP traffic on port 49730 -> 443", "HTTP traffic on port 49729 -> 443", "HTTP traffic on port 49719 -> 443", "HTTP traffic on port 443 -> 49719", "HTTP traffic on port 443 -> 49729", "HTTP traffic on port 49713 -> 443", "HTTP traffic on port 443 -> 49717", "HTTP traffic on port 49714 -> 443", "HTTP traffic on port 49715 -> 443", "HTTP traffic on port 443 -> 49715", "HTTP traffic on port 49717 -> 443", "HTTP traffic on port 443 -> 49714", "HTTP traffic on port 443 -> 49713"]}, {"severity": "INFO", "description": "Uses HTTPS for network communication, use the SSL MITM Proxy cookbook for further analysis", "match_data": ["HTTP traffic on port 443 -> 49732", "HTTP traffic on port 443 -> 49730", "HTTP traffic on port 49732 -> 443", "HTTP traffic on port 49730 -> 443", "HTTP traffic on port 49729 -> 443", "HTTP traffic on port 49719 -> 443", "HTTP traffic on port 443 -> 49719", "HTTP traffic on port 443 -> 49729", "HTTP traffic on port 49713 -> 443", "HTTP traffic on port 443 -> 49717", "HTTP traffic on port 49714 -> 443", "HTTP traffic on port 49715 -> 443", "HTTP traffic on port 443 -> 49715", "HTTP traffic on port 49717 -> 443", "HTTP traffic on port 443 -> 49714", "HTTP traffic on port 443 -> 49713"]}]}, {"id": "T1095", "name": "Non-Application Layer Protocol", "link": "https://attack.mitre.org/techniques/T1095/", "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.\nIn ESXi environments, adversaries may leverage the Virtual Machine Communication Interface (VMCI) for communication between guest virtual machines and the ESXi host. This traffic is similar to client-server communications on traditional network sockets but is localized to the physical machine running the ESXi host, meaning it does not traverse external networks (routers, switches). This results in communications that are invisible to external monitoring and standard networking tools like tcpdump, netstat, nmap, and Wireshark. By adding a VMCI backdoor to a compromised ESXi host, adversaries may persistently regain access from any guest VM to the compromised ESXi host\u2019s backdoor, regardless of network segmentation or firewall rules in place.", "signatures": [{"severity": "INFO", "description": "Performs DNS lookups", "match_data": ["DNS query: x1.c.lencr.org", "DNS query: c.pki.goog", "DNS query: videomanagerentry.s3.ap-northeast-1.amazonaws.com", "DNS query: u.arpuu.com"]}]}, {"id": "T1071", "name": "Application Layer Protocol", "link": "https://attack.mitre.org/techniques/T1071/", "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, DNS, or publishing/subscribing. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ", "signatures": [{"severity": "INFO", "description": "Performs DNS lookups", "match_data": ["DNS query: x1.c.lencr.org", "DNS query: c.pki.goog", "DNS query: videomanagerentry.s3.ap-northeast-1.amazonaws.com", "DNS query: u.arpuu.com", "HTTP traffic on port 443 -> 49732", "HTTP traffic on port 443 -> 49730", "HTTP traffic on port 49732 -> 443", "HTTP traffic on port 49730 -> 443", "HTTP traffic on port 49729 -> 443", "HTTP traffic on port 49719 -> 443", "HTTP traffic on port 443 -> 49719", "HTTP traffic on port 443 -> 49729", "HTTP traffic on port 49713 -> 443", "HTTP traffic on port 443 -> 49717", "HTTP traffic on port 49714 -> 443", "HTTP traffic on port 49715 -> 443", "HTTP traffic on port 443 -> 49715", "HTTP traffic on port 49717 -> 443", "HTTP traffic on port 443 -> 49714", "HTTP traffic on port 443 -> 49713"]}, {"severity": "INFO", "description": "Uses HTTPS", "match_data": ["DNS query: x1.c.lencr.org", "DNS query: c.pki.goog", "DNS query: videomanagerentry.s3.ap-northeast-1.amazonaws.com", "DNS query: u.arpuu.com", "HTTP traffic on port 443 -> 49732", "HTTP traffic on port 443 -> 49730", "HTTP traffic on port 49732 -> 443", "HTTP traffic on port 49730 -> 443", "HTTP traffic on port 49729 -> 443", "HTTP traffic on port 49719 -> 443", "HTTP traffic on port 443 -> 49719", "HTTP traffic on port 443 -> 49729", "HTTP traffic on port 49713 -> 443", "HTTP traffic on port 443 -> 49717", "HTTP traffic on port 49714 -> 443", "HTTP traffic on port 49715 -> 443", "HTTP traffic on port 443 -> 49715", "HTTP traffic on port 49717 -> 443", "HTTP traffic on port 443 -> 49714", "HTTP traffic on port 443 -> 49713"]}]}]}]}}, "links": {"self": "https://www.virustotal.com/api/v3/files/16e01dd4c60462c0a870bf55ec987514e122f27b306858e73f71a8ca4b896423/behaviour_mitre_trees"}}